diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Cast.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Cast.ts
index 7437712..5b4ceb7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Cast.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Cast.ts
@@ -7,7 +7,7 @@
  * @returns **`A1`** or **`A2`**
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Cast<'42', string> // '42'
  * type test1 = A.Cast<'42', number> // number
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Clean.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Clean.ts
index 041aae5..974f749 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Clean.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Clean.ts
@@ -1,10 +1,10 @@
-import {_Omit} from '../Object/Omit'
-import {_Pick} from '../Object/Pick'
-import {At} from '../Object/At'
-import {Exclude} from '../Union/Exclude'
-import {Numbers} from '../Number/_Internal'
-import {_ListOf} from '../Object/ListOf'
-import {Has} from '../Union/Has'
+import type {_Omit} from '../Object/Omit'
+import type {_Pick} from '../Object/Pick'
+import type {At} from '../Object/At'
+import type {Exclude} from '../Union/Exclude'
+import type {Numbers} from '../Number/_Internal'
+import type {_ListOf} from '../Object/ListOf'
+import type {Has} from '../Union/Has'
 
 /**
  * @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Compute.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Compute.ts
index 0ac6628..74793bf 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Compute.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Compute.ts
@@ -1,5 +1,5 @@
-import {Depth} from '../Object/_Internal'
-import {BuiltInObject} from '../Misc/BuiltInObject'
+import type {Depth} from '../Object/_Internal'
+import type {BuiltInObject} from '../Misc/BuiltInObject'
 
 /**
  * @hidden
@@ -40,7 +40,7 @@ export type ComputeDeep<A extends any, Seen extends any = A> =
  * @returns **`A`**
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Compute<{x: 'x'} & {y: 'y'}> // {x: 'x', y: 'y'}
  * ```
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Contains.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Contains.ts
index 13affb4..78b776c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Contains.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Contains.ts
@@ -1,4 +1,4 @@
-import {Extends} from './Extends'
+import type {Extends} from './Extends'
 
 /**
  * Check whether **`A1`** is part of **`A2`** or not. It works like
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Equals.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Equals.ts
index 8e0a443..ddefae9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Equals.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Equals.ts
@@ -5,7 +5,7 @@
  * @returns [[Boolean]]
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Equals<42 | 0, 42 | 0>                    // true
  * type test1 = A.Equals<{a: string}, {b: string}>          // false
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Extends.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Extends.ts
index cc15306..69fd102 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Extends.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Extends.ts
@@ -6,7 +6,7 @@
  * @returns [[Boolean]]
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Extends<'a' | 'b', 'b'> // Boolean
  * type test1 = A.Extends<'a', 'a' | 'b'> // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Is.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Is.ts
index e570430..72a6719 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Is.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Is.ts
@@ -1,7 +1,7 @@
-import {Match} from './_Internal'
-import {Extends} from './Extends'
-import {Equals} from './Equals'
-import {Contains} from './Contains'
+import type {Match} from './_Internal'
+import type {Extends} from './Extends'
+import type {Equals} from './Equals'
+import type {Contains} from './Contains'
 
 /**
  * Check whether **`A`** is similar to **`A1`** or not. In other words, it is a
@@ -13,7 +13,7 @@ import {Contains} from './Contains'
  * @returns [[Boolean]]
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Is<'a', 'a' | 'b', 'extends->'> // True
  * type test1 = A.Is<'a' | 'b', 'a', 'extends->'> // Boolean
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/IsLiteral.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/IsLiteral.ts
index ae5caf5..6e8cc16 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/IsLiteral.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/IsLiteral.ts
@@ -1,6 +1,6 @@
-import {And} from '../Boolean/And'
-import {Or} from '../Boolean/Or'
-import {Extends} from './Extends'
+import type {And} from '../Boolean/And'
+import type {Or} from '../Boolean/Or'
+import type {Extends} from './Extends'
 
 /**
  * @hidden
@@ -33,7 +33,7 @@ export type Kind = string | number
  * @param kind (?=`'string' | 'number'`) to restrict
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.IsLiteral<1 | 2> // 1
  * type test1 = A.IsLiteral<1 | 2, string> // 0
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Kind.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Kind.ts
index 870ff20..9b6f58d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Kind.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Kind.ts
@@ -1,5 +1,5 @@
-import {Extends} from './Extends'
-import {List} from '../List/List'
+import type {Extends} from './Extends'
+import type {List} from '../List/List'
 
 /**
  * @hidden
@@ -7,7 +7,7 @@ import {List} from '../List/List'
 type _Kind<A extends any> =
     Extends<A, Function> extends 1 ? 'function' : // the order  // to
     Extends<A, List>     extends 1 ? 'array'    : // of this is // untangle
-    Extends<A, object>   extends 1 ? 'object'   : // important  // object types
+    Extends<A, object>   extends 1 ? 'object'   : // import typeant  // object types
     Extends<A, string>   extends 1 ? 'string'   :
     Extends<A, number>   extends 1 ? 'number'   :
     Extends<A, boolean>  extends 1 ? 'boolean'  :
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Omit.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Omit.ts
index 20325cc..d47ac41 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Omit.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Omit.ts
@@ -1,8 +1,8 @@
-import {_Omit as _OOmit} from '../Object/Omit'
-import {_Omit as _LOmit} from '../List/Omit'
-import {Key} from './Key'
-import {List} from '../List/List'
-import {Union} from '../Union/Union'
+import type {_Omit as _OOmit} from '../Object/Omit'
+import type {_Omit as _LOmit} from '../List/Omit'
+import type {Key} from './Key'
+import type {List} from '../List/List'
+import type {Union} from '../Union/Union'
 
 /**
  * Remove out from each member of union **`U`** the fields of key **`K`**
@@ -11,7 +11,7 @@ import {Union} from '../Union/Union'
  * @returns [[Union]]
  * @example
  * ```ts
- * import {U} from 'ts-toolbelt'
+ * import type {U} from 'ts-toolbelt'
  *
  * type O = {type: 'foo'; other: number} | {type: 'bar'; other: string} | [0, 1]
  * type test0 = U.Omit<O, 'other' | '0'> // {type: 'foo'} | {type: 'bar'} | [1]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Pick.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Pick.ts
index 9231019..3172868 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Pick.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Pick.ts
@@ -1,8 +1,8 @@
-import {_Pick as _OPick} from '../Object/Pick'
-import {_Pick as _LPick} from '../List/Pick'
-import {Key} from './Key'
-import {List} from '../List/List'
-import {Union} from '../Union/Union'
+import type {_Pick as _OPick} from '../Object/Pick'
+import type {_Pick as _LPick} from '../List/Pick'
+import type {Key} from './Key'
+import type {List} from '../List/List'
+import type {Union} from '../Union/Union'
 
 /**
  * Extract out from each member of union **`U`** the fields of key **`K`**
@@ -11,7 +11,7 @@ import {Union} from '../Union/Union'
  * @returns [[Union]]
  * @example
  * ```ts
- * import {U} from 'ts-toolbelt'
+ * import type {U} from 'ts-toolbelt'
  *
  * type O = {type: 'foo'; other: number} | {type: 'bar'; other: string} | [0, 1]
  * type test0 = U.Pick<O, 'type' | '1'> // {type: 'foo'} | {type: 'bar'} | [1]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Promisable.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Promisable.ts
index 81af9b7..e392cdc 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Promisable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Promisable.ts
@@ -1,4 +1,4 @@
-import {Promise} from '../Any/Promise'
+import type {Promise} from '../Any/Promise'
 
 /**
  * A way to say that you can handle **`Promises`** and non-**`Promises`**. This
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/PromiseOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/PromiseOf.ts
index 61e441c..afa21bd 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/PromiseOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/PromiseOf.ts
@@ -4,7 +4,7 @@ Get the instance type wrapped within a **`Promise`**
 @returns **`any`**
 @example
 ```ts
-import {C} from 'ts-toolbelt'
+import type {C} from 'ts-toolbelt'
 
 const promise = new Promise<string>((res, rej) => res('x'))
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Try.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Try.ts
index b1b10f6..ba1c3f8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Try.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Try.ts
@@ -7,7 +7,7 @@
  * @returns **`A1`** or **`Catch`**
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type test0 = A.Try<'42', string>          // '42'
  * type test1 = A.Try<'42', number>          // never
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/Type.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/Type.ts
index 2674c82..19a74b6 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/Type.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/Type.ts
@@ -1,4 +1,4 @@
-import {Key} from './Key'
+import type {Key} from './Key'
 
 /**
  * Create your own opaque sub-type from a type **`A`**
@@ -7,7 +7,7 @@ import {Key} from './Key'
  * @returns A new type **`Type<A, Id>`**
  * @example
  * ```ts
- * import {A} from 'ts-toolbelt'
+ * import type {A} from 'ts-toolbelt'
  *
  * type EUR = Type<number, 'eur'>
  * type USD = Type<number, 'usd'>
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/_Internal.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/_Internal.ts
index d173459..53a7d1d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/_Internal.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/_Internal.ts
@@ -1,5 +1,5 @@
-import {_NumberOf} from '../Number/NumberOf'
-import {NumberMap} from '../Iteration/Maps/Number'
+import type {_NumberOf} from '../Number/NumberOf'
+import type {NumberMap} from '../Iteration/Maps/Number'
 
 /**
  * Describes the match strategy when matching types
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Any/x.ts b/node_modules/rambdax/_ts-toolbelt/src/Any/x.ts
index af67308..6a457d8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Any/x.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Any/x.ts
@@ -1,4 +1,4 @@
-import {Type} from './Type'
+import type {Type} from './Type'
 
 /**
  * A placeholder that is used in various ways
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Boolean/And.ts b/node_modules/rambdax/_ts-toolbelt/src/Boolean/And.ts
index d9484ca..f41eb7d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Boolean/And.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Boolean/And.ts
@@ -1,4 +1,4 @@
-import {Boolean} from './Boolean'
+import type {Boolean} from './Boolean'
 
 /**
 Logical **`&&`** operator (behaves like the JS one)
@@ -7,7 +7,7 @@ Logical **`&&`** operator (behaves like the JS one)
 @returns [[Boolean]]
 @example
 ```ts
-import {B} from 'ts-toolbelt'
+import type {B} from 'ts-toolbelt'
 
 type test0 = B.And<B.True, B.False>          // False
 type test1 = B.And<B.True, B.True>           // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Format.ts b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Format.ts
index 98d3bc8..5771427 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Format.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Format.ts
@@ -1,5 +1,5 @@
-import {Boolean} from './Boolean'
-import {Formats} from './_Internal'
+import type {Boolean} from './Boolean'
+import type {Formats} from './_Internal'
 
 /**
 Change the format of a [[Boolean]]
@@ -7,7 +7,7 @@ Change the format of a [[Boolean]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {B} from 'ts-toolbelt'
+import type {B} from 'ts-toolbelt'
 
 type test0 = B.Format<B.True, 's'> // 'true'
 type test1 = B.Format<B.True, 'b'> //  true
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Not.ts b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Not.ts
index 0d5c912..5a19e34 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Not.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Not.ts
@@ -1,4 +1,4 @@
-import {Boolean} from './Boolean'
+import type {Boolean} from './Boolean'
 
 /**
 Logical **`!`** operator (behaves like the JS one)
@@ -6,7 +6,7 @@ Logical **`!`** operator (behaves like the JS one)
 @returns [[Boolean]]
 @example
 ```ts
-import {B} from 'ts-toolbelt'
+import type {B} from 'ts-toolbelt'
 
 type test0 = B.Not<B.True>  // False
 type test1 = B.Not<B.False> // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Or.ts b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Or.ts
index 0b366a1..1ff2a6f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Or.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Or.ts
@@ -1,4 +1,4 @@
-import {Boolean} from './Boolean'
+import type {Boolean} from './Boolean'
 
 /**
 Logical **`||`** operator (behaves like the JS one)
@@ -7,7 +7,7 @@ Logical **`||`** operator (behaves like the JS one)
 @returns [[Boolean]]
 @example
 ```ts
-import {B} from 'ts-toolbelt'
+import type {B} from 'ts-toolbelt'
 
 type test0 = B.Or<B.True, B.False>    // True
 type test1 = B.Or<B.True, B.True>     // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Xor.ts b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Xor.ts
index bf9708f..0c16df2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Boolean/Xor.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Boolean/Xor.ts
@@ -1,4 +1,4 @@
-import {Boolean} from './Boolean'
+import type {Boolean} from './Boolean'
 
 /**
 Logical **`^`** operator (behaves like the JS one)
@@ -7,7 +7,7 @@ Logical **`^`** operator (behaves like the JS one)
 @returns [[Boolean]]
 @example
 ```ts
-import {B} from 'ts-toolbelt'
+import type {B} from 'ts-toolbelt'
 
 type test0 = B.Xor<B.True, B.True>    // False
 type test1 = B.Xor<B.False, B.True>   // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Class/Class.ts b/node_modules/rambdax/_ts-toolbelt/src/Class/Class.ts
index 4cd5a0c..af9d242 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Class/Class.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Class/Class.ts
@@ -1,4 +1,4 @@
-import {List} from '../List/List'
+import type {List} from '../List/List'
 
 /**
 Alias to create/describe a [[Class]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Class/InstanceOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Class/InstanceOf.ts
index 98cfad7..439dbef 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Class/InstanceOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Class/InstanceOf.ts
@@ -1,4 +1,4 @@
-import {Class} from './Class'
+import type {Class} from './Class'
 
 /**
 Get the instance type of a **`class`** from a class object
@@ -6,7 +6,7 @@ Get the instance type of a **`class`** from a class object
 @returns **`class`**
 @example
 ```ts
-import {C} from 'ts-toolbelt'
+import type {C} from 'ts-toolbelt'
 
 /// `create` takes an instance constructor and creates an instance of it
 declare function create<C extends (new (...args: any[]) => any)>(c: C): C.InstanceOf<C>
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Class/Parameters.ts b/node_modules/rambdax/_ts-toolbelt/src/Class/Parameters.ts
index 555f828..b0b1947 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Class/Parameters.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Class/Parameters.ts
@@ -1,4 +1,4 @@
-import {Class} from './Class'
+import type {Class} from './Class'
 
 /**
 Get the parameters of a class constructor
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Community/IncludesDeep.ts b/node_modules/rambdax/_ts-toolbelt/src/Community/IncludesDeep.ts
index 2883f16..018abc6 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Community/IncludesDeep.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Community/IncludesDeep.ts
@@ -1,12 +1,12 @@
-import {Match} from '../Any/_Internal'
-import {Number} from '../Number/Number'
-import {UnionOf} from '../Object/UnionOf'
-import {Next} from '../Iteration/Next'
-import {Key} from '../Iteration/Key'
-import {Prev} from '../Iteration/Prev'
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Is} from '../Any/Is'
+import type {Match} from '../Any/_Internal'
+import type {Number} from '../Number/Number'
+import type {UnionOf} from '../Object/UnionOf'
+import type {Next} from '../Iteration/Next'
+import type {Key} from '../Iteration/Key'
+import type {Prev} from '../Iteration/Prev'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Is} from '../Any/Is'
 
 /**
  * @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose.ts
index 832b72d..e474652 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose.ts
@@ -1,24 +1,24 @@
-import {Mode, Input} from './_Internal'
-import {ComposeMultiSync} from './Compose/Multi/Sync'
-import {ComposeMultiAsync} from './Compose/Multi/Async'
-import {ComposeListSync} from './Compose/List/Sync'
-import {ComposeListAsync} from './Compose/List/Async'
-import {Function} from './Function'
-import {Pos} from '../Iteration/Pos'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Last} from '../List/Last'
-import {Format} from '../String/Format'
-import {Length} from '../List/Length'
-import {Tail} from '../List/Tail'
-import {Next} from '../Iteration/Next'
-import {Head} from '../List/Head'
-import {Return} from './Return'
-import {Parameters} from './Parameters'
-import {PromiseOf} from '../Any/PromiseOf'
-import {Or} from '../Boolean/Or'
-import {Extends} from '../Any/Extends'
-import {List} from '../List/List'
-import {IntersectOf} from '../Union/IntersectOf'
+import type {Mode, Input} from './_Internal'
+import type {ComposeMultiSync} from './Compose/Multi/Sync'
+import type {ComposeMultiAsync} from './Compose/Multi/Async'
+import type {ComposeListSync} from './Compose/List/Sync'
+import type {ComposeListAsync} from './Compose/List/Async'
+import type {Function} from './Function'
+import type {Pos} from '../Iteration/Pos'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Last} from '../List/Last'
+import type {Format} from '../String/Format'
+import type {Length} from '../List/Length'
+import type {Tail} from '../List/Tail'
+import type {Next} from '../Iteration/Next'
+import type {Head} from '../List/Head'
+import type {Return} from './Return'
+import type {Parameters} from './Parameters'
+import type {PromiseOf} from '../Any/PromiseOf'
+import type {Or} from '../Boolean/Or'
+import type {Extends} from '../Any/Extends'
+import type {List} from '../List/List'
+import type {IntersectOf} from '../Union/IntersectOf'
 
 /**
 @hidden
@@ -65,7 +65,7 @@ Compose [[Function]]s together
 @returns [[Function]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 /// If you are looking for creating types for `compose`
 /// `Composer` will check for input & `Composed` the output
@@ -97,7 +97,7 @@ Compose [[Function]]s together
 @param input (?=`'multi'`)   whether you want it to take a list or parameters
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 /// If you are looking for creating types for `compose`
 /// `Composer` will check for input & `Compose` the output
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Async.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Async.ts
index 33e2215..36d2e02 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Async.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Async.ts
@@ -1,7 +1,7 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
-import {PromiseOf} from '../../../Any/PromiseOf'
+import type {Function} from '../../Function'
+import type {PromiseOf} from '../../../Any/PromiseOf'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Sync.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Sync.ts
index 9df5fd2..12def1c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Sync.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/List/Sync.ts
@@ -1,6 +1,6 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
+import type {Function} from '../../Function'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Async.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Async.ts
index 4eacd2a..dd8d106 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Async.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Async.ts
@@ -1,7 +1,7 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
-import {PromiseOf} from '../../../Any/PromiseOf'
+import type {Function} from '../../Function'
+import type {PromiseOf} from '../../../Any/PromiseOf'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Sync.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Sync.ts
index 578ef88..1f24a1f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Sync.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Compose/Multi/Sync.ts
@@ -1,7 +1,7 @@
 
 /** @ignore *//** */
 
-import {Function} from '../../Function'
+import type {Function} from '../../Function'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Curry.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Curry.ts
index f87a089..55948c1 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Curry.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Curry.ts
@@ -1,19 +1,19 @@
-import {Pos} from '../Iteration/Pos'
-import {Append} from '../List/Append'
-import {_Concat} from '../List/Concat'
-import {Length} from '../List/Length'
-import {Next} from '../Iteration/Next'
-import {Cast} from '../Any/Cast'
-import {Parameters} from './Parameters'
-import {Return} from './Return'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {NonNullable} from '../List/NonNullable'
-import {x} from '../Any/x'
-import {List} from '../List/List'
-import {Function} from './Function'
-import {Extends} from '../Any/Extends'
-import {Tail} from '../List/Tail'
+import type {Pos} from '../Iteration/Pos'
+import type {Append} from '../List/Append'
+import type {_Concat} from '../List/Concat'
+import type {Length} from '../List/Length'
+import type {Next} from '../Iteration/Next'
+import type {Cast} from '../Any/Cast'
+import type {Parameters} from './Parameters'
+import type {Return} from './Return'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {NonNullable} from '../List/NonNullable'
+import type {x} from '../Any/x'
+import type {List} from '../List/List'
+import type {Function} from './Function'
+import type {Extends} from '../Any/Extends'
+import type {Tail} from '../List/Tail'
 
 /**
 @hidden
@@ -45,7 +45,7 @@ Curry a [[Function]]
 @returns [[Function]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 /// If you are looking for creating types for `curry`
 /// It handles placeholders and variable arguments
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Function.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Function.ts
index db22e3b..c7a3f87 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Function.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Function.ts
@@ -1,4 +1,4 @@
-import {List} from '../List/List'
+import type {List} from '../List/List'
 
 /**
 Alias to create a [[Function]]
@@ -7,7 +7,7 @@ Alias to create a [[Function]]
 @returns [[Function]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 type test0 = F.Function<[string, number], boolean>
 /// (args_0: string, args_1: number) => boolean
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Length.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Length.ts
index 094c209..2f2683b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Length.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Length.ts
@@ -1,7 +1,7 @@
-import {Function} from './Function'
-import {Parameters} from './Parameters'
-import {Formats} from '../Iteration/_Internal'
-import {Length as LLength} from '../List/Length'
+import type {Function} from './Function'
+import type {Parameters} from './Parameters'
+import type {Formats} from '../Iteration/_Internal'
+import type {Length as LLength} from '../List/Length'
 
 /**
 Extract arguments' length from a [[Function]]
@@ -10,7 +10,7 @@ Extract arguments' length from a [[Function]]
 @returns [[String]] or **`number`**
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 const fn = (a1: any, a2: any) => {}
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/NoInfer.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/NoInfer.ts
index b52a839..b686c73 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/NoInfer.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/NoInfer.ts
@@ -4,7 +4,7 @@ Explain to TS which function parameter has priority for generic inference
 @returns **`A`**
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 const fn0 = <A extends any>(a0: A, a1: F.NoInfer<A>): A => {
     return {} as unknown as A // just for the example
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Parameters.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Parameters.ts
index e7b8d22..af2c62f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Parameters.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Parameters.ts
@@ -1,4 +1,4 @@
-import {Function} from './Function'
+import type {Function} from './Function'
 
 /**
 Extract parameters from a [[Function]]
@@ -6,7 +6,7 @@ Extract parameters from a [[Function]]
 @returns [[List]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 const fn = (name: string, age: number) => {}
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe.ts
index 6f100d3..1bb3779 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe.ts
@@ -1,21 +1,21 @@
-import {Mode, Input} from './_Internal'
-import {PipeMultiSync} from './Pipe/Multi/Sync'
-import {PipeMultiAsync} from './Pipe/Multi/Async'
-import {PipeListSync} from './Pipe/List/Sync'
-import {PipeListAsync} from './Pipe/List/Async'
-import {Function} from './Function'
-import {Pos} from '../Iteration/Pos'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Last} from '../List/Last'
-import {Prev} from '../Iteration/Prev'
-import {Head} from '../List/Head'
-import {Return} from './Return'
-import {Parameters} from './Parameters'
-import {PromiseOf} from '../Any/PromiseOf'
-import {Or} from '../Boolean/Or'
-import {Extends} from '../Any/Extends'
-import {List} from '../List/List'
-import {IntersectOf} from '../Union/IntersectOf'
+import type {Mode, Input} from './_Internal'
+import type {PipeMultiSync} from './Pipe/Multi/Sync'
+import type {PipeMultiAsync} from './Pipe/Multi/Async'
+import type {PipeListSync} from './Pipe/List/Sync'
+import type {PipeListAsync} from './Pipe/List/Async'
+import type {Function} from './Function'
+import type {Pos} from '../Iteration/Pos'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Last} from '../List/Last'
+import type {Prev} from '../Iteration/Prev'
+import type {Head} from '../List/Head'
+import type {Return} from './Return'
+import type {Parameters} from './Parameters'
+import type {PromiseOf} from '../Any/PromiseOf'
+import type {Or} from '../Boolean/Or'
+import type {Extends} from '../Any/Extends'
+import type {List} from '../List/List'
+import type {IntersectOf} from '../Union/IntersectOf'
 
 /**
 @hidden
@@ -63,7 +63,7 @@ Pipe [[Function]]s together
 @returns [[Function]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 /// If you are looking for creating types for `pipe`
 /// `Piper` will check for input & `Piped` the output
@@ -97,7 +97,7 @@ Pipe [[Function]]s together
 @returns [[Function]]
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 /// If you are looking for creating types for `pipe`:
 declare const pipe: F.Pipe
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Async.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Async.ts
index c669172..5790a73 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Async.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Async.ts
@@ -1,6 +1,6 @@
 /** @ignore *//** */
-import {Function} from '../../Function'
-import {PromiseOf} from '../../../Any/PromiseOf'
+import type {Function} from '../../Function'
+import type {PromiseOf} from '../../../Any/PromiseOf'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Sync.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Sync.ts
index c7c4ab1..d2289d7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Sync.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/List/Sync.ts
@@ -1,6 +1,6 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
+import type {Function} from '../../Function'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Async.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Async.ts
index 3e04802..09f9702 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Async.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Async.ts
@@ -1,7 +1,7 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
-import {PromiseOf} from '../../../Any/PromiseOf'
+import type {Function} from '../../Function'
+import type {PromiseOf} from '../../../Any/PromiseOf'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Sync.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Sync.ts
index f1703c2..3ff5fb4 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Sync.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Pipe/Multi/Sync.ts
@@ -1,6 +1,6 @@
 /** @ignore *//** */
 
-import {Function} from '../../Function'
+import type {Function} from '../../Function'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Promisify.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Promisify.ts
index 349118f..f53447f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Promisify.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Promisify.ts
@@ -1,7 +1,7 @@
-import {Function} from './Function'
-import {Parameters} from './Parameters'
-import {Return} from './Return'
-import {Promise} from '../Any/Promise'
+import type {Function} from './Function'
+import type {Parameters} from './Parameters'
+import type {Return} from './Return'
+import type {Promise} from '../Any/Promise'
 
 /**
 Creates a promisified version of a **`Function`** **`F`**
@@ -9,7 +9,7 @@ Creates a promisified version of a **`Function`** **`F`**
 @returns async F
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 type test0 = F.Promisify<(a: number) => number> // (a: number) => Promise<number>
 ```
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/Return.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/Return.ts
index 4b14cad..289d8a2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/Return.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/Return.ts
@@ -1,4 +1,4 @@
-import {Function} from './Function'
+import type {Function} from './Function'
 
 /**
 Extract the return type of a [[Function]]
@@ -6,7 +6,7 @@ Extract the return type of a [[Function]]
 @returns **`any`**
 @example
 ```ts
-import {F} from 'ts-toolbelt'
+import type {F} from 'ts-toolbelt'
 
 const fn = () => true
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Function/UnCurry.ts b/node_modules/rambdax/_ts-toolbelt/src/Function/UnCurry.ts
index 688cd4b..0a02a68 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Function/UnCurry.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Function/UnCurry.ts
@@ -1,4 +1,4 @@
-import {Curry} from './Curry'
+import type {Curry} from './Curry'
 
 /**
 Undoes the work that was done by [[Curry]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Format.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Format.ts
index 6529192..7749177 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Format.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Format.ts
@@ -1,5 +1,5 @@
-import {Iteration} from './Iteration'
-import {Formats} from './_Internal'
+import type {Iteration} from './Iteration'
+import type {Formats} from './_Internal'
 
 /**
 Is [[Key]] and [[Pos]] in a single type
@@ -8,7 +8,7 @@ Is [[Key]] and [[Pos]] in a single type
 @returns **`string | number`**
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 /// Let's make '20' an iteration
 type i = I.IterationOf<'20'> // [...]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/IterationOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/IterationOf.ts
index 4a393f6..b731cf2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/IterationOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/IterationOf.ts
@@ -1,6 +1,6 @@
-import {Number} from '../Number/Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {Number} from '../Number/Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 Transform a number into an [[Iteration]]
@@ -10,7 +10,7 @@ Transform a number into an [[Iteration]]
 @returns [[Iteration]]
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 type i = I.IterationOf<'0'> // ["-1", "1", "0", 0, "0"]
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Key.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Key.ts
index b4f2051..6153c7f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Key.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Key.ts
@@ -1,5 +1,5 @@
-import {Iteration} from './Iteration'
-import {Format} from './Format'
+import type {Iteration} from './Iteration'
+import type {Format} from './Format'
 
 /**
 Get the position of **`I`** (**string**)
@@ -7,7 +7,7 @@ Get the position of **`I`** (**string**)
 @returns [[String]]
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 type i = I.IterationOf<'20'>
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Map.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Map.ts
index c1ed24e..a924982 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Map.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Map.ts
@@ -1,5 +1,5 @@
-import {Iteration} from './Iteration'
-import {Patch} from '../Object/Patch'
+import type {Iteration} from './Iteration'
+import type {Patch} from '../Object/Patch'
 
 /**
  * Defines a basic map that will be passed to [[CreateMap]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Number.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Number.ts
index ad64ebc..1cd95e4 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Number.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Number.ts
@@ -1,4 +1,4 @@
-import {CreateMap} from '../Map'
+import type {CreateMap} from '../Map'
 
 /**
  * @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Pixel.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Pixel.ts
index e3d64ae..763bbac 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Pixel.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Maps/Pixel.ts
@@ -1,4 +1,4 @@
-import {CreateMap} from '../Map'
+import type {CreateMap} from '../Map'
 
 /**
  * @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Next.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Next.ts
index c207512..850c27b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Next.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Next.ts
@@ -1,6 +1,6 @@
-import {Map} from '../Iteration/Map'
-import {Iteration} from './Iteration'
-import {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
+import type {Iteration} from './Iteration'
+import type {NumberMap} from '../Iteration/Maps/Number'
 
 /**
 Move **`I`**'s position forward
@@ -9,7 +9,7 @@ Move **`I`**'s position forward
 @returns [[Iteration]]
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 type i = I.IterationOf<'20'>
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Pos.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Pos.ts
index 57b1d37..441527b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Pos.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Pos.ts
@@ -1,5 +1,5 @@
-import {Iteration} from './Iteration'
-import {Format} from './Format'
+import type {Iteration} from './Iteration'
+import type {Format} from './Format'
 
 /**
 Get the position of **`I`** (**number**)
@@ -8,7 +8,7 @@ Get the position of **`I`** (**number**)
 @returns **`number`**
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 type i = I.IterationOf<'20'>
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Prev.ts b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Prev.ts
index 0eb6e4e..f6658ca 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Iteration/Prev.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Iteration/Prev.ts
@@ -1,6 +1,6 @@
-import {Map} from '../Iteration/Map'
-import {Iteration} from './Iteration'
-import {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
+import type {Iteration} from './Iteration'
+import type {NumberMap} from '../Iteration/Maps/Number'
 
 /**
 Move **`I`**'s position backwards
@@ -9,7 +9,7 @@ Move **`I`**'s position backwards
 @returns [[Iteration]]
 @example
 ```ts
-import {I} from 'ts-toolbelt'
+import type {I} from 'ts-toolbelt'
 
 type i = I.IterationOf<'20'>
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Append.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Append.ts
index 6006af8..754acb5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Append.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Append.ts
@@ -1,5 +1,5 @@
-import {_Concat} from './Concat'
-import {List} from './List'
+import type {_Concat} from './Concat'
+import type {List} from './List'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Assign.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Assign.ts
index ca1f1fb..fa8b625 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Assign.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Assign.ts
@@ -1,8 +1,8 @@
-import {Assign as OAssign} from '../Object/Assign'
-import {List} from './List'
-import {ObjectOf} from './ObjectOf'
-import {ListOf} from '../Object/ListOf'
-import {Depth} from '../Object/_Internal'
+import type {Assign as OAssign} from '../Object/Assign'
+import type {List} from './List'
+import type {ObjectOf} from './ObjectOf'
+import type {ListOf} from '../Object/ListOf'
+import type {Depth} from '../Object/_Internal'
 
 /**
 Assign a list of [[List]] into **`L`** with [[Merge]]. Merges from left to
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/At.ts b/node_modules/rambdax/_ts-toolbelt/src/List/At.ts
index d54d290..2e311e0 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/At.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/At.ts
@@ -1,7 +1,7 @@
-import {At as OAt} from '../Object/At'
-import {Key} from '../Any/Key'
-import {List} from './List'
-import {Boolean} from '../Boolean/Boolean'
+import type {At as OAt} from '../Object/At'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
+import type {Boolean} from '../Boolean/Boolean'
 
 /**
 Get in **`L`** the type of an entry of key **`K`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/AtLeast.ts b/node_modules/rambdax/_ts-toolbelt/src/List/AtLeast.ts
index 9e90bec..aa4e6a7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/AtLeast.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/AtLeast.ts
@@ -1,10 +1,10 @@
-import {Key} from '../Any/Key'
-import {AtLeast as OAtLeast} from '../Object/AtLeast'
-import {ObjectOf} from './ObjectOf'
-import {_ListOf} from '../Object/ListOf'
-import {List} from './List'
-import {NumberOf} from '../Any/_Internal'
-import {Keys} from './Keys'
+import type {Key} from '../Any/Key'
+import type {AtLeast as OAtLeast} from '../Object/AtLeast'
+import type {ObjectOf} from './ObjectOf'
+import type {_ListOf} from '../Object/ListOf'
+import type {List} from './List'
+import type {NumberOf} from '../Any/_Internal'
+import type {Keys} from './Keys'
 
 /**
 Make that at least one of the keys **`K`** are required in **`L`** at a time.
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Compulsory.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Compulsory.ts
index 71e615c..b64f931 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Compulsory.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Compulsory.ts
@@ -1,8 +1,8 @@
-import {Depth} from '../Object/_Internal'
-import {Compulsory as OCompulsory} from '../Object/Compulsory'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Key} from '../Any/Key'
+import type {Depth} from '../Object/_Internal'
+import type {Compulsory as OCompulsory} from '../Object/Compulsory'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Key} from '../Any/Key'
 
 /**
 Make that **`L`**'s fields cannot be [[Nullable]] or [[Optional]] (it's like
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/CompulsoryKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/CompulsoryKeys.ts
index ef16e75..eccb446 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/CompulsoryKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/CompulsoryKeys.ts
@@ -1,6 +1,6 @@
-import {Compulsory as OCompulsory} from '../Object/Compulsory'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Compulsory as OCompulsory} from '../Object/Compulsory'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are [[Compulsory]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Concat.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Concat.ts
index c0eda4b..a1aefb5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Concat.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Concat.ts
@@ -1,5 +1,5 @@
-import {_Reverse} from './Reverse'
-import {List} from './List'
+import type {_Reverse} from './Reverse'
+import type {List} from './List'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Diff.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Diff.ts
index 9b509e8..209e0bd 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Diff.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Diff.ts
@@ -1,8 +1,8 @@
-import {Diff as ODiff} from '../Object/Diff'
-import {ListOf} from '../Object/ListOf'
-import {Match} from '../Any/_Internal'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Diff as ODiff} from '../Object/Diff'
+import type {ListOf} from '../Object/ListOf'
+import type {Match} from '../Any/_Internal'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get a [[List]] that is the difference between **`L`** & **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Drop.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Drop.ts
index 0dacfbe..b7a328c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Drop.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Drop.ts
@@ -1,15 +1,15 @@
-import {Tail} from './Tail'
-import {Cast} from '../Any/Cast'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from '../Number/Number'
-import {Way} from '../Iteration/_Internal'
-import {List} from './List'
-import {Pos} from '../Iteration/Pos'
-import {Prev} from '../Iteration/Prev'
-import {Prepend} from './Prepend'
-import {Naked} from './_Internal'
-import {Extends} from '../Any/Extends'
+import type {Tail} from './Tail'
+import type {Cast} from '../Any/Cast'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from '../Number/Number'
+import type {Way} from '../Iteration/_Internal'
+import type {List} from './List'
+import type {Pos} from '../Iteration/Pos'
+import type {Prev} from '../Iteration/Prev'
+import type {Prepend} from './Prepend'
+import type {Naked} from './_Internal'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Either.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Either.ts
index 270e1c5..bb5e8b5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Either.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Either.ts
@@ -1,10 +1,10 @@
-import {Key} from '../Any/Key'
-import {Either as OEither} from '../Object/Either'
-import {ObjectOf} from './ObjectOf'
-import {_ListOf} from '../Object/ListOf'
-import {List} from './List'
-import {Boolean} from '../Boolean/Boolean'
-import {NumberOf} from '../Any/_Internal'
+import type {Key} from '../Any/Key'
+import type {Either as OEither} from '../Object/Either'
+import type {ObjectOf} from './ObjectOf'
+import type {_ListOf} from '../Object/ListOf'
+import type {List} from './List'
+import type {Boolean} from '../Boolean/Boolean'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 Split **`L`** into a [[Union]] with **`K`** keys in such a way that none of
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Exclude.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Exclude.ts
index 2ad1a89..1989a79 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Exclude.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Exclude.ts
@@ -1,8 +1,8 @@
-import {Match} from '../Any/_Internal'
-import {ListOf} from '../Object/ListOf'
-import {Exclude as OExclude} from '../Object/Exclude'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match} from '../Any/_Internal'
+import type {ListOf} from '../Object/ListOf'
+import type {Exclude as OExclude} from '../Object/Exclude'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Exclude the entries of **`L1`** out of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/ExcludeKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/ExcludeKeys.ts
index 73fbe2e..6d470be 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/ExcludeKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/ExcludeKeys.ts
@@ -1,7 +1,7 @@
-import {ExcludeKeys as OExcludeKeys} from '../Object/ExcludeKeys'
-import {Match} from '../Any/_Internal'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {ExcludeKeys as OExcludeKeys} from '../Object/ExcludeKeys'
+import type {Match} from '../Any/_Internal'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Exclude the keys of **`L1`** out of the keys of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Extract.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Extract.ts
index 1097fae..900aa84 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Extract.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Extract.ts
@@ -1,7 +1,7 @@
-import {KeySet} from './KeySet'
-import {Number} from '../Number/Number'
-import {Pick} from './Pick'
-import {List} from './List'
+import type {KeySet} from './KeySet'
+import type {Number} from '../Number/Number'
+import type {Pick} from './Pick'
+import type {List} from './List'
 
 /**
 Pick a range of entries (portion) from **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Filter.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Filter.ts
index e6f3c33..8eb05c2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Filter.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Filter.ts
@@ -1,8 +1,8 @@
-import {Filter as OFilter} from '../Object/Filter'
-import {ListOf} from '../Object/ListOf'
-import {Match} from '../Any/_Internal'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Filter as OFilter} from '../Object/Filter'
+import type {ListOf} from '../Object/ListOf'
+import type {Match} from '../Any/_Internal'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Filter out of **`L`** the entries that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/FilterKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/FilterKeys.ts
index fb86f99..94911de 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/FilterKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/FilterKeys.ts
@@ -1,7 +1,7 @@
-import {FilterKeys as OFilterKeys} from '../Object/FilterKeys'
-import {Match} from '../Any/_Internal'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {FilterKeys as OFilterKeys} from '../Object/FilterKeys'
+import type {Match} from '../Any/_Internal'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Filter out the keys of **`L`** which entries match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Flatten.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Flatten.ts
index f2cfc7e..e86fdf0 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Flatten.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Flatten.ts
@@ -1,14 +1,14 @@
-import {List} from './List'
-import {_UnNest} from './UnNest'
-import {Cast} from '../Any/Cast'
-import {Equals} from '../Any/Equals'
-import {Number} from '../Number/Number'
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Extends} from '../Any/Extends'
-import {Next} from '../Iteration/Next'
-import {Or} from '../Boolean/Or'
-import {Boolean} from '../Boolean/Boolean'
+import type {List} from './List'
+import type {_UnNest} from './UnNest'
+import type {Cast} from '../Any/Cast'
+import type {Equals} from '../Any/Equals'
+import type {Number} from '../Number/Number'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Extends} from '../Any/Extends'
+import type {Next} from '../Iteration/Next'
+import type {Or} from '../Boolean/Or'
+import type {Boolean} from '../Boolean/Boolean'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Group.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Group.ts
index 8cf33a7..a41aa40 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Group.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Group.ts
@@ -1,11 +1,11 @@
-import {Number} from '../Number/Number'
-import {_Drop} from './Drop'
-import {_Take} from './Take'
-import {Cast} from '../Any/Cast'
-import {Prepend} from './Prepend'
-import {_Reverse} from './Reverse'
-import {List} from './List'
-import {Extends} from '../Any/_api'
+import type {Number} from '../Number/Number'
+import type {_Drop} from './Drop'
+import type {_Take} from './Take'
+import type {Cast} from '../Any/Cast'
+import type {Prepend} from './Prepend'
+import type {_Reverse} from './Reverse'
+import type {List} from './List'
+import type {Extends} from '../Any/_api'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Has.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Has.ts
index 48af038..4744e72 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Has.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Has.ts
@@ -1,8 +1,8 @@
-import {Match, NumberOf} from '../Any/_Internal'
-import {Has as OHas} from '../Object/Has'
-import {Key} from '../Any/Key'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match, NumberOf} from '../Any/_Internal'
+import type {Has as OHas} from '../Object/Has'
+import type {Key} from '../Any/Key'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Check whether **`L`** has a entry of key **`K`** that matches **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/HasPath.ts b/node_modules/rambdax/_ts-toolbelt/src/List/HasPath.ts
index 4597843..8edc213 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/HasPath.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/HasPath.ts
@@ -1,8 +1,8 @@
-import {HasPath as OHasPath} from '../Object/HasPath'
-import {Match} from '../Any/_Internal'
-import {Key} from '../Any/Key'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {HasPath as OHasPath} from '../Object/HasPath'
+import type {Match} from '../Any/_Internal'
+import type {Key} from '../Any/Key'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Check whether **`L`** has nested entries that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Head.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Head.ts
index 94830e5..f43b9f8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Head.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Head.ts
@@ -1,5 +1,5 @@
-import {Length} from './Length'
-import {List} from './List'
+import type {Length} from './Length'
+import type {List} from './List'
 
 /**
 Get the first entry of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Includes.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Includes.ts
index 13754e6..815cb28 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Includes.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Includes.ts
@@ -1,7 +1,7 @@
-import {Match} from '../Any/_Internal'
-import {Includes as OIncludes} from '../Object/Includes'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match} from '../Any/_Internal'
+import type {Includes as OIncludes} from '../Object/Includes'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Check whether **`L`** has entries that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Intersect.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Intersect.ts
index 66c3f81..4bcfa8a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Intersect.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Intersect.ts
@@ -1,8 +1,8 @@
-import {Intersect as OIntersect} from '../Object/Intersect'
-import {Match} from '../Any/_Internal'
-import {ListOf} from '../Object/ListOf'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Intersect as OIntersect} from '../Object/Intersect'
+import type {Match} from '../Any/_Internal'
+import type {ListOf} from '../Object/ListOf'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the intersecting entries of **`L`** & **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/IntersectKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/IntersectKeys.ts
index 198ec51..ce086cc 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/IntersectKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/IntersectKeys.ts
@@ -1,7 +1,7 @@
-import {Match} from '../Any/_Internal'
-import {IntersectKeys as OIntersectKeys} from '../Object/IntersectKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match} from '../Any/_Internal'
+import type {IntersectKeys as OIntersectKeys} from '../Object/IntersectKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the intersecting entries of **`L`** & **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/KeySet.ts b/node_modules/rambdax/_ts-toolbelt/src/List/KeySet.ts
index 1dbb8db..074e61d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/KeySet.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/KeySet.ts
@@ -1,6 +1,6 @@
-import {Number} from '../Number/Number'
-import {Range} from '../Number/Range'
-import {UnionOf} from './UnionOf'
+import type {Number} from '../Number/Number'
+import type {Range} from '../Number/Range'
+import type {UnionOf} from './UnionOf'
 
 /**
 Create a set of keys
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Keys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Keys.ts
index 8e7f874..3e79363 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Keys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Keys.ts
@@ -1,6 +1,6 @@
-import {Exclude} from '../Union/Exclude'
-import {List} from './List'
-import {Keys as UKeys} from '../Union/Keys'
+import type {Exclude} from '../Union/Exclude'
+import type {List} from './List'
+import type {Keys as UKeys} from '../Union/Keys'
 
 /**
 Get the keys of a [[List]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Last.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Last.ts
index 6cbb8d6..ec3f992 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Last.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Last.ts
@@ -1,6 +1,6 @@
-import {Tail} from './Tail'
-import {Length} from './Length'
-import {List} from './List'
+import type {Tail} from './Tail'
+import type {Length} from './Length'
+import type {List} from './List'
 
 /**
 Get the last entry of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/LastIndex.ts b/node_modules/rambdax/_ts-toolbelt/src/List/LastIndex.ts
index 9f0ee2e..22152b9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/LastIndex.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/LastIndex.ts
@@ -1,7 +1,7 @@
-import {Length} from './Length'
-import {Formats} from '../Iteration/_Internal'
-import {Tail} from './Tail'
-import {List} from './List'
+import type {Length} from './Length'
+import type {Formats} from '../Iteration/_Internal'
+import type {Tail} from './Tail'
+import type {List} from './List'
 
 /**
 Get the last index of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Length.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Length.ts
index 3980cf1..27906b2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Length.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Length.ts
@@ -1,6 +1,6 @@
-import {NumberOf} from '../Number/NumberOf'
-import {Formats} from '../Iteration/_Internal'
-import {List} from './List'
+import type {NumberOf} from '../Number/NumberOf'
+import type {Formats} from '../Iteration/_Internal'
+import type {List} from './List'
 
 /**
 Get the length of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Longest.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Longest.ts
index 1fb23f0..1f7c5d9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Longest.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Longest.ts
@@ -1,6 +1,6 @@
-import {Exclude} from '../Union/Exclude'
-import {List} from './List'
-import {Keys} from './Keys'
+import type {Exclude} from '../Union/Exclude'
+import type {List} from './List'
+import type {Keys} from './Keys'
 
 /**
 Get the longest [[List]] of **`L`** & **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Merge.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Merge.ts
index b45d2fe..722f172 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Merge.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Merge.ts
@@ -1,6 +1,6 @@
-import {Merge as OMerge} from '../Object/Merge'
-import {List} from './List'
-import {Depth} from '../Object/_Internal'
+import type {Merge as OMerge} from '../Object/Merge'
+import type {List} from './List'
+import type {Depth} from '../Object/_Internal'
 
 /**
 Accurately merge the fields of **`L`** with the ones of **`L1`**. It is
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/MergeAll.ts b/node_modules/rambdax/_ts-toolbelt/src/List/MergeAll.ts
index ba3f3d7..6469b44 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/MergeAll.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/MergeAll.ts
@@ -1,6 +1,6 @@
-import {MergeAll as OMergeAll} from '../Object/MergeAll'
-import {List} from '../List/List'
-import {Depth} from '../Object/_Internal'
+import type {MergeAll as OMergeAll} from '../Object/MergeAll'
+import type {List} from '../List/List'
+import type {Depth} from '../Object/_Internal'
 
 /**
 [[Merge]] a list of [[List]]s into **`L`**. Merges from left to right, first
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Modify.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Modify.ts
index dd426a3..ff8a99b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Modify.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Modify.ts
@@ -1,7 +1,7 @@
-import {At} from './At'
-import {Replace} from '../Union/Replace'
-import {x} from '../Any/x'
-import {List} from './List'
+import type {At} from './At'
+import type {Replace} from '../Union/Replace'
+import type {x} from '../Any/x'
+import type {List} from './List'
 
 /**
 Modify **`L`** with **`LMod`** & the [[x]] placeholder
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/NonNullable.ts b/node_modules/rambdax/_ts-toolbelt/src/List/NonNullable.ts
index c64d601..db331a0 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/NonNullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/NonNullable.ts
@@ -1,13 +1,13 @@
-import {Depth} from '../Object/_Internal'
-import {NonNullable as ONonNullable} from '../Object/NonNullable'
-import {ListOf} from '../Object/ListOf'
-import {Cast} from '../Any/Cast'
-import {Key} from '../Any/Key'
-import {ObjectOf} from './ObjectOf'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {List} from './List'
-import {NumberOf} from '../Any/_Internal'
+import type {Depth} from '../Object/_Internal'
+import type {NonNullable as ONonNullable} from '../Object/NonNullable'
+import type {ListOf} from '../Object/ListOf'
+import type {Cast} from '../Any/Cast'
+import type {Key} from '../Any/Key'
+import type {ObjectOf} from './ObjectOf'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {List} from './List'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 Make some entries of **`L`** not nullable (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/NonNullableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/NonNullableKeys.ts
index 97a5790..c739d62 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/NonNullableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/NonNullableKeys.ts
@@ -1,6 +1,6 @@
-import {NonNullableKeys as ONonNullableKeys} from '../Object/NonNullableKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {NonNullableKeys as ONonNullableKeys} from '../Object/NonNullableKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are non-nullable
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Nullable.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Nullable.ts
index 8e2739a..afc2cb7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Nullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Nullable.ts
@@ -1,13 +1,13 @@
-import {Key} from '../Any/Key'
-import {Cast} from '../Any/Cast'
-import {Contains} from '../Any/Contains'
-import {Depth} from '../Object/_Internal'
-import {Nullable as ONullable} from '../Object/Nullable'
-import {ListOf} from '../Object/ListOf'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
-import {Keys} from './Keys'
-import {NumberOf} from '../Any/_Internal'
+import type {Key} from '../Any/Key'
+import type {Cast} from '../Any/Cast'
+import type {Contains} from '../Any/Contains'
+import type {Depth} from '../Object/_Internal'
+import type {Nullable as ONullable} from '../Object/Nullable'
+import type {ListOf} from '../Object/ListOf'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
+import type {Keys} from './Keys'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 Make some entries of **`L`** nullable (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/NullableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/NullableKeys.ts
index baa0bb8..3b0ce62 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/NullableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/NullableKeys.ts
@@ -1,6 +1,6 @@
-import {NullableKeys as ONullableKeys} from '../Object/NullableKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {NullableKeys as ONullableKeys} from '../Object/NullableKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are nullable
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/ObjectOf.ts b/node_modules/rambdax/_ts-toolbelt/src/List/ObjectOf.ts
index 677e72e..f87cb62 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/ObjectOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/ObjectOf.ts
@@ -1,8 +1,8 @@
-import {_Omit} from '../Object/Omit'
-import {Has} from '../Union/Has'
-import {At} from '../Object/At'
-import {List} from './List'
-import {Exclude} from '../Union/Exclude'
+import type {_Omit} from '../Object/Omit'
+import type {Has} from '../Union/Has'
+import type {At} from '../Object/At'
+import type {List} from './List'
+import type {Exclude} from '../Union/Exclude'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Omit.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Omit.ts
index e8c1e2a..e30d61a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Omit.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Omit.ts
@@ -1,9 +1,9 @@
-import {_Omit as _OOmit} from '../Object/Omit'
-import {_ListOf} from '../Object/ListOf'
-import {Key} from '../Any/Key'
-import {List} from './List'
-import {_ObjectOf} from './ObjectOf'
-import {NumberOf} from '../Any/_Internal'
+import type {_Omit as _OOmit} from '../Object/Omit'
+import type {_ListOf} from '../Object/ListOf'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
+import type {_ObjectOf} from './ObjectOf'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Optional.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Optional.ts
index 5754e7e..02e1982 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Optional.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Optional.ts
@@ -1,8 +1,8 @@
-import {Optional as OOptional} from '../Object/Optional'
-import {Depth} from '../Object/_Internal'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Key} from '../Any/Key'
+import type {Optional as OOptional} from '../Object/Optional'
+import type {Depth} from '../Object/_Internal'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Key} from '../Any/Key'
 
 /**
 Make **`L`** optional (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/OptionalKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/OptionalKeys.ts
index 9726a5a..4910bc5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/OptionalKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/OptionalKeys.ts
@@ -1,6 +1,6 @@
-import {OptionalKeys as OOptionalKeys} from '../Object/OptionalKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {OptionalKeys as OOptionalKeys} from '../Object/OptionalKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are optional
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Overwrite.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Overwrite.ts
index d864122..8e5cd5d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Overwrite.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Overwrite.ts
@@ -1,6 +1,6 @@
-import {Overwrite as OOverwrite} from '../Object/Overwrite'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
+import type {Overwrite as OOverwrite} from '../Object/Overwrite'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
 
 /**
 Update the entries of **`L`** with the ones of **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Partial.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Partial.ts
index 39f67e1..4da10bd 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Partial.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Partial.ts
@@ -1,7 +1,7 @@
-import {Partial as OPartial} from '../Object/Partial'
-import {Depth} from '../Object/_Internal'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
+import type {Partial as OPartial} from '../Object/Partial'
+import type {Depth} from '../Object/_Internal'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
 
 /**
 Make all fields of **`O`** optional (deeply or not)
@@ -10,7 +10,7 @@ Make all fields of **`O`** optional (deeply or not)
 @returns [[List]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type L = [1, 2, 3, [4, [5]]]
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Patch.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Patch.ts
index 29fba98..995f5a4 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Patch.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Patch.ts
@@ -1,6 +1,6 @@
-import {Patch as OPatch} from '../Object/Patch'
-import {List} from './List'
-import {Depth} from '../Object/_Internal'
+import type {Patch as OPatch} from '../Object/Patch'
+import type {List} from './List'
+import type {Depth} from '../Object/_Internal'
 
 /**
 Complete the fields of **`L`** with the ones of **`L1`**. This is a version of
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/PatchAll.ts b/node_modules/rambdax/_ts-toolbelt/src/List/PatchAll.ts
index e6d6600..f16f42f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/PatchAll.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/PatchAll.ts
@@ -1,6 +1,6 @@
-import {PatchAll as OPatchAll} from '../Object/PatchAll'
-import {List} from '../List/List'
-import {Depth} from '../Object/_Internal'
+import type {PatchAll as OPatchAll} from '../Object/PatchAll'
+import type {List} from '../List/List'
+import type {Depth} from '../Object/_Internal'
 
 /**
 [[Patch]] a list of [[List]]s into **`L`**. Patches from left to right, first
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Path.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Path.ts
index e759f03..013bf8d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Path.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Path.ts
@@ -1,6 +1,6 @@
-import {Path as OPath} from '../Object/Path'
-import {Key} from '../Any/Key'
-import {List} from './List'
+import type {Path as OPath} from '../Object/Path'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
 
 /**
 Get in **`L`** the type of nested properties
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/PathValid.ts b/node_modules/rambdax/_ts-toolbelt/src/List/PathValid.ts
index ebbe610..9edf319 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/PathValid.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/PathValid.ts
@@ -1,6 +1,6 @@
-import {PathValid as OPathValid} from '../Object/PathValid'
-import {Key} from '../Any/Key'
-import {List} from './List'
+import type {PathValid as OPathValid} from '../Object/PathValid'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
 
 /**
 Replaces invalid parts of a path with `never`
@@ -9,7 +9,7 @@ Replaces invalid parts of a path with `never`
 @returns **`Index[]`**
 @example
 ```ts
-import {A, L, O} from 'ts-toolbelt'
+import type {A, L, O} from 'ts-toolbelt'
 
 // Get a property in an array `t` at any depth with `path`
 // `A.Cast<P, L.PathValid<L, P>>` makes sure `path` is valid
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Paths.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Paths.ts
index 5d6f35e..16ffa31 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Paths.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Paths.ts
@@ -1,6 +1,6 @@
-import {Paths as OPaths} from '../Object/Paths'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Paths as OPaths} from '../Object/Paths'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get all the possible paths of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Pick.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Pick.ts
index e6d80e3..a59d369 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Pick.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Pick.ts
@@ -1,9 +1,9 @@
-import {_Pick as _OPick} from '../Object/Pick'
-import {_ListOf} from '../Object/ListOf'
-import {Key} from '../Any/Key'
-import {_ObjectOf} from './ObjectOf'
-import {List} from './List'
-import {NumberOf} from '../Any/_Internal'
+import type {_Pick as _OPick} from '../Object/Pick'
+import type {_ListOf} from '../Object/ListOf'
+import type {Key} from '../Any/Key'
+import type {_ObjectOf} from './ObjectOf'
+import type {List} from './List'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Pop.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Pop.ts
index 146adc7..128cc80 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Pop.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Pop.ts
@@ -1,7 +1,7 @@
-import {_Omit} from './Omit'
-import {List} from './List'
-import {LastIndex} from './LastIndex'
-import {Naked} from './_Internal'
+import type {_Omit} from './Omit'
+import type {List} from './List'
+import type {LastIndex} from './LastIndex'
+import type {Naked} from './_Internal'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Prepend.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Prepend.ts
index 79db275..14ab6ad 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Prepend.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Prepend.ts
@@ -1,4 +1,4 @@
-import {List} from './List'
+import type {List} from './List'
 
 /**
 Add an element **`A`** at the beginning of **`L`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Readonly.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Readonly.ts
index b05cc21..eb8199d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Readonly.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Readonly.ts
@@ -1,8 +1,8 @@
-import {Depth} from '../Object/_Internal'
-import {Readonly as OReadonly} from '../Object/Readonly'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Key} from '../Any/Key'
+import type {Depth} from '../Object/_Internal'
+import type {Readonly as OReadonly} from '../Object/Readonly'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Key} from '../Any/Key'
 
 /**
 Make **`L`** readonly (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/ReadonlyKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/ReadonlyKeys.ts
index a8caa9e..42165fb 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/ReadonlyKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/ReadonlyKeys.ts
@@ -1,6 +1,6 @@
-import {ReadonlyKeys as OReadonlyKeys} from '../Object/ReadonlyKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {ReadonlyKeys as OReadonlyKeys} from '../Object/ReadonlyKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are readonly
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Remove.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Remove.ts
index 5109e04..85bec07 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Remove.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Remove.ts
@@ -1,7 +1,7 @@
-import {Number} from '../Number/Number'
-import {KeySet} from './KeySet'
-import {Omit} from './Omit'
-import {List} from './List'
+import type {Number} from '../Number/Number'
+import type {KeySet} from './KeySet'
+import type {Omit} from './Omit'
+import type {List} from './List'
 
 /**
 Remove out of **`L`** a range of entries
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Repeat.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Repeat.ts
index b954b2b..e5e3cd0 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Repeat.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Repeat.ts
@@ -1,12 +1,12 @@
-import {Next} from '../Iteration/Next'
-import {Prepend} from './Prepend'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from '../Number/Number'
-import {Cast} from '../Any/Cast'
-import {Key} from '../Iteration/Key'
-import {List} from './List'
-import {Extends} from '../Any/Extends'
+import type {Next} from '../Iteration/Next'
+import type {Prepend} from './Prepend'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from '../Number/Number'
+import type {Cast} from '../Any/Cast'
+import type {Key} from '../Iteration/Key'
+import type {List} from './List'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Replace.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Replace.ts
index 0fc0956..ee9328d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Replace.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Replace.ts
@@ -1,7 +1,7 @@
-import {Replace as OReplace} from '../Object/Replace'
-import {Match} from '../Any/_Internal'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
+import type {Replace as OReplace} from '../Object/Replace'
+import type {Match} from '../Any/_Internal'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
 
 /**
 Update with **`A`** the entries of **`L`** that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Required.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Required.ts
index 3aafa19..08530f3 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Required.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Required.ts
@@ -1,8 +1,8 @@
-import {Depth} from '../Object/_Internal'
-import {Required as ORequired} from '../Object/Required'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Key} from '../Any/Key'
+import type {Depth} from '../Object/_Internal'
+import type {Required as ORequired} from '../Object/Required'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Key} from '../Any/Key'
 
 /**
 Make **`L`** required (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/RequiredKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/RequiredKeys.ts
index 9e15336..a6c3f73 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/RequiredKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/RequiredKeys.ts
@@ -1,6 +1,6 @@
-import {RequiredKeys as ORequiredKeys} from '../Object/RequiredKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {RequiredKeys as ORequiredKeys} from '../Object/RequiredKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are readonly
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Reverse.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Reverse.ts
index 42b6e90..e9b9fdb 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Reverse.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Reverse.ts
@@ -1,13 +1,13 @@
-import {Prepend} from './Prepend'
-import {Pos} from '../Iteration/Pos'
-import {Next} from '../Iteration/Next'
-import {Length} from './Length'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Naked} from './_Internal'
-import {Extends} from '../Any/Extends'
+import type {Prepend} from './Prepend'
+import type {Pos} from '../Iteration/Pos'
+import type {Next} from '../Iteration/Next'
+import type {Length} from './Length'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Naked} from './_Internal'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Select.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Select.ts
index a4f7e04..57237d9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Select.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Select.ts
@@ -1,8 +1,8 @@
-import {Match} from '../Any/_Internal'
-import {Select as OSelect} from '../Object/Select'
-import {ListOf} from '../Object/ListOf'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match} from '../Any/_Internal'
+import type {Select as OSelect} from '../Object/Select'
+import type {ListOf} from '../Object/ListOf'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Extract the entries of **`L`** that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/SelectKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/SelectKeys.ts
index 3e41af9..006bc8d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/SelectKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/SelectKeys.ts
@@ -1,7 +1,7 @@
-import {Match} from '../Any/_Internal'
-import {SelectKeys as OSelectKeys} from '../Object/SelectKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {Match} from '../Any/_Internal'
+import type {SelectKeys as OSelectKeys} from '../Object/SelectKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** which entries match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Shortest.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Shortest.ts
index 426a142..d10abe2 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Shortest.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Shortest.ts
@@ -1,6 +1,6 @@
-import {Exclude} from '../Union/Exclude'
-import {List} from './List'
-import {Keys} from './Keys'
+import type {Exclude} from '../Union/Exclude'
+import type {List} from './List'
+import type {Keys} from './Keys'
 
 /**
 Get the shortest [[List]] of **`L`** & **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Tail.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Tail.ts
index 40ef689..6f9f165 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Tail.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Tail.ts
@@ -1,4 +1,4 @@
-import {List} from './List'
+import type {List} from './List'
 
 /**
 Remove the first item out of a [[List]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Take.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Take.ts
index d31aca9..f44793b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Take.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Take.ts
@@ -1,14 +1,14 @@
-import {Number} from '../Number/Number'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Pos} from '../Iteration/Pos'
-import {Prepend} from './Prepend'
-import {Way} from '../Iteration/_Internal'
-import {List} from './List'
-import {Prev} from '../Iteration/Prev'
-import {Cast} from '../Any/Cast'
-import {Tail} from './Tail'
-import {Extends} from '../Any/Extends'
+import type {Number} from '../Number/Number'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Pos} from '../Iteration/Pos'
+import type {Prepend} from './Prepend'
+import type {Way} from '../Iteration/_Internal'
+import type {List} from './List'
+import type {Prev} from '../Iteration/Prev'
+import type {Cast} from '../Any/Cast'
+import type {Tail} from './Tail'
+import type {Extends} from '../Any/Extends'
 
 /**
 starts in reverse from `N` till `N` = 0
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/UnNest.ts b/node_modules/rambdax/_ts-toolbelt/src/List/UnNest.ts
index 08c5b38..77507bd 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/UnNest.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/UnNest.ts
@@ -1,18 +1,18 @@
-import {_Concat} from './Concat'
-import {_Append} from './Append'
-import {Cast} from '../Any/Cast'
-import {Length} from './Length'
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Next} from '../Iteration/Next'
-import {Pos} from '../Iteration/Pos'
-import {List} from './List'
-import {UnionOf} from './UnionOf'
-import {Naked} from './_Internal'
-import {Extends} from '../Any/Extends'
-import {Boolean} from '../Boolean/Boolean'
-import {Not} from '../Boolean/Not'
-import {And} from '../Boolean/And'
+import type {_Concat} from './Concat'
+import type {_Append} from './Append'
+import type {Cast} from '../Any/Cast'
+import type {Length} from './Length'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Next} from '../Iteration/Next'
+import type {Pos} from '../Iteration/Pos'
+import type {List} from './List'
+import type {UnionOf} from './UnionOf'
+import type {Naked} from './_Internal'
+import type {Extends} from '../Any/Extends'
+import type {Boolean} from '../Boolean/Boolean'
+import type {Not} from '../Boolean/Not'
+import type {And} from '../Boolean/And'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Undefinable.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Undefinable.ts
index a795796..4f62e08 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Undefinable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Undefinable.ts
@@ -1,13 +1,13 @@
-import {Depth} from '../Object/_Internal'
-import {Undefinable as OUndefinable} from '../Object/Undefinable'
-import {ListOf} from '../Object/ListOf'
-import {Cast} from '../Any/Cast'
-import {Key} from '../Any/Key'
-import {ObjectOf} from './ObjectOf'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {List} from './List'
-import {NumberOf} from '../Any/_Internal'
+import type {Depth} from '../Object/_Internal'
+import type {Undefinable as OUndefinable} from '../Object/Undefinable'
+import type {ListOf} from '../Object/ListOf'
+import type {Cast} from '../Any/Cast'
+import type {Key} from '../Any/Key'
+import type {ObjectOf} from './ObjectOf'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {List} from './List'
+import type {NumberOf} from '../Any/_Internal'
 
 /**
 Make some entries of **`L`** not **`undefined`** (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/UndefinableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/UndefinableKeys.ts
index 4165f0d..9f1d748 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/UndefinableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/UndefinableKeys.ts
@@ -1,6 +1,6 @@
-import {UndefinableKeys as OUndefinableKeys} from '../Object/UndefinableKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {UndefinableKeys as OUndefinableKeys} from '../Object/UndefinableKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are **`undefined`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/UnionOf.ts b/node_modules/rambdax/_ts-toolbelt/src/List/UnionOf.ts
index c9eb79d..6981fc3 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/UnionOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/UnionOf.ts
@@ -1,4 +1,4 @@
-import {List} from './List'
+import type {List} from './List'
 
 /**
 Transform a [[List]] into an [[Union]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Unionize.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Unionize.ts
index aca6247..614fb44 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Unionize.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Unionize.ts
@@ -1,7 +1,7 @@
-import {Key} from '../Any/Key'
-import {List} from './List'
-import {At} from '../Object/At'
-import {Format} from '../String/Format'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
+import type {At} from '../Object/At'
+import type {Format} from '../String/Format'
 
 /**
 Make the fields of **`L`** union the ones of **`L1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Update.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Update.ts
index fd778a8..cacded8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Update.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Update.ts
@@ -1,6 +1,6 @@
-import {Key} from '../Any/Key'
-import {List} from './List'
-import {Update as OUpdate} from '../Object/Update'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
+import type {Update as OUpdate} from '../Object/Update'
 
 /**
 Update in **`L`** the entries of key **`K`** with **`A`**.
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Writable.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Writable.ts
index a470c42..b1ed02a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Writable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Writable.ts
@@ -1,8 +1,8 @@
-import {Depth} from '../Object/_Internal'
-import {Writable as OWritable} from '../Object/Writable'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Key} from '../Any/Key'
+import type {Depth} from '../Object/_Internal'
+import type {Writable as OWritable} from '../Object/Writable'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Key} from '../Any/Key'
 
 /**
 Make **`L`** writable (deeply or not)
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/WritableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/List/WritableKeys.ts
index 73fccb3..d59f176 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/WritableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/WritableKeys.ts
@@ -1,6 +1,6 @@
-import {WritableKeys as OWritableKeys} from '../Object/WritableKeys'
-import {ObjectOf} from './ObjectOf'
-import {List} from './List'
+import type {WritableKeys as OWritableKeys} from '../Object/WritableKeys'
+import type {ObjectOf} from './ObjectOf'
+import type {List} from './List'
 
 /**
 Get the keys of **`L`** that are writable
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/Zip.ts b/node_modules/rambdax/_ts-toolbelt/src/List/Zip.ts
index fdd8a7b..579c9f8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/Zip.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/Zip.ts
@@ -1,14 +1,14 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Prepend} from './Prepend'
-import {Next} from '../Iteration/Next'
-import {Length} from './Length'
-import {Pos} from '../Iteration/Pos'
-import {_Reverse} from './Reverse'
-import {Cast} from '../Any/Cast'
-import {List} from './List'
-import {Naked} from './_Internal'
-import {Extends} from '../Any/Extends'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Prepend} from './Prepend'
+import type {Next} from '../Iteration/Next'
+import type {Length} from './Length'
+import type {Pos} from '../Iteration/Pos'
+import type {_Reverse} from './Reverse'
+import type {Cast} from '../Any/Cast'
+import type {List} from './List'
+import type {Naked} from './_Internal'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/ZipObj.ts b/node_modules/rambdax/_ts-toolbelt/src/List/ZipObj.ts
index 1bbf1a5..7f97ed1 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/ZipObj.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/ZipObj.ts
@@ -1,15 +1,15 @@
-import {Length} from './Length'
-import {Pos} from '../Iteration/Pos'
-import {Next} from '../Iteration/Next'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Cast} from '../Any/Cast'
-import {Record} from '../Object/Record'
-import {Key} from '../Any/Key'
-import {List} from './List'
-import {Naked} from './_Internal'
-import {Extends} from '../Any/Extends'
-import {PatchFlat} from '../Object/Patch'
+import type {Length} from './Length'
+import type {Pos} from '../Iteration/Pos'
+import type {Next} from '../Iteration/Next'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Cast} from '../Any/Cast'
+import type {Record} from '../Object/Record'
+import type {Key} from '../Any/Key'
+import type {List} from './List'
+import type {Naked} from './_Internal'
+import type {Extends} from '../Any/Extends'
+import type {PatchFlat} from '../Object/Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/List/_Internal.ts b/node_modules/rambdax/_ts-toolbelt/src/List/_Internal.ts
index 2baf349..54a39d8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/List/_Internal.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/List/_Internal.ts
@@ -1,7 +1,7 @@
 /** @ignore *//** */
 
-import {Overwrite} from '../Object/Overwrite'
-import {List} from './List'
+import type {Overwrite} from '../Object/Overwrite'
+import type {List} from './List'
 
 /**
 Remove `?` & `readonly` from a [[List]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Array.ts b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Array.ts
index eb8428b..c9acd79 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Array.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Array.ts
@@ -1,4 +1,4 @@
-import {Value} from './Value'
+import type {Value} from './Value'
 
 /**
 A list of JSON [[Value]]s
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Object.ts b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Object.ts
index 90efb90..3dbb6e5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Object.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Object.ts
@@ -1,4 +1,4 @@
-import {Value} from './Value'
+import type {Value} from './Value'
 
 /**
 An object of JSON [[Value]]s
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Value.ts b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Value.ts
index 347ae6d..f65c8af 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Value.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Misc/JSON/Value.ts
@@ -1,6 +1,6 @@
-import {Primitive} from './Primitive'
-import {List} from './Array'
-import {Object} from './Object'
+import type {Primitive} from './Primitive'
+import type {List} from './Array'
+import type {Object} from './Object'
 
 /**
 Any JSON data/value
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Absolute.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Absolute.ts
index 1db8d3a..db05c4a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Absolute.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Absolute.ts
@@ -1,12 +1,12 @@
-import {_Negate} from './Negate'
-import {_IsNegative} from './IsNegative'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {_Negate} from './Negate'
+import type {_IsNegative} from './IsNegative'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -24,7 +24,7 @@ Get the absolute value of a [[Number]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Absolute<'-20'>      // '20'
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Format.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Format.ts
index b350e32..c676a4e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Format.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Format.ts
@@ -1,11 +1,11 @@
-import {Formats} from './_Internal'
-import {Number} from './Number'
-import {IsZero} from './IsZero'
-import {Not} from '../Boolean/Not'
-import {Pos} from '../Iteration/Pos'
-import {IterationOf} from '../Iteration/IterationOf'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {Formats} from './_Internal'
+import type {Number} from './Number'
+import type {IsZero} from './IsZero'
+import type {Not} from '../Boolean/Not'
+import type {Pos} from '../Iteration/Pos'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 Change the format of a [[Number]]
@@ -15,7 +15,7 @@ Change the format of a [[Number]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Format<'30', 'b'> // True
 type test1 = N.Format<'30', 'n'> // 30
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Greater.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Greater.ts
index 80b07b3..75bd32f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Greater.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Greater.ts
@@ -1,10 +1,10 @@
-import {_Minus} from './Minus'
-import {_IsPositive} from './IsPositive'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {_Minus} from './Minus'
+import type {_IsPositive} from './IsPositive'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -20,7 +20,7 @@ Check if a [[Number]] is bigger than another one
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Greater<'7', '5'> // True
 type test1 = N.Greater<'5', '5'> // False
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/GreaterEq.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/GreaterEq.ts
index 2b4943b..087748d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/GreaterEq.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/GreaterEq.ts
@@ -1,11 +1,11 @@
-import {Equals} from '../Any/Equals'
-import {_Greater} from './Greater'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {Or} from '../Boolean/Or'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {Equals} from '../Any/Equals'
+import type {_Greater} from './Greater'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {Or} from '../Boolean/Or'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -21,7 +21,7 @@ Check if a [[Number]] is greater or equal to another one
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.GreaterEq<'7', '5'> // True
 type test1 = N.GreaterEq<'5', '5'> // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/IsNegative.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/IsNegative.ts
index 013b27d..1bc9c2a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/IsNegative.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/IsNegative.ts
@@ -1,8 +1,8 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -19,7 +19,7 @@ Check whether a [[Number]] is negative or not
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.IsNegative<'0'>  // False
 type test1 = N.IsNegative<'-7'> // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/IsPositive.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/IsPositive.ts
index 415766c..6c1a54a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/IsPositive.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/IsPositive.ts
@@ -1,9 +1,9 @@
-import {_IsNegative} from './IsNegative'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {_IsNegative} from './IsNegative'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -20,7 +20,7 @@ Check whether a [[Number]] is positive or not
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.IsPositive<'0'>  // False
 type test1 = N.IsPositive<'-7'> // False
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/IsZero.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/IsZero.ts
index f0b541f..7a2a9d7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/IsZero.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/IsZero.ts
@@ -1,8 +1,8 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -20,7 +20,7 @@ Check whether a [[Number]] is null or not
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.IsZero<'0'>  // True
 type test1 = N.IsZero<'-7'> // False
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Lower.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Lower.ts
index 16b65ea..eb50b1a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Lower.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Lower.ts
@@ -1,9 +1,9 @@
-import {_Greater} from './Greater'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {_Greater} from './Greater'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -19,7 +19,7 @@ Check if a [[Number]] is lower than another one
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Lower<'7', '5'> // False
 type test1 = N.Lower<'5', '5'> // False
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/LowerEq.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/LowerEq.ts
index 0aa6da4..43e537b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/LowerEq.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/LowerEq.ts
@@ -1,7 +1,7 @@
-import {GreaterEq} from './GreaterEq'
-import {Number} from './Number'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {GreaterEq} from './GreaterEq'
+import type {Number} from './Number'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 Check if a [[Number]] is lower or equal to another one
@@ -11,7 +11,7 @@ Check if a [[Number]] is lower or equal to another one
 @returns [[Boolean]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.LowerEq<'7', '5'> // False
 type test1 = N.LowerEq<'5', '5'> // True
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Max.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Max.ts
index ca903a6..5bbdebb 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Max.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Max.ts
@@ -1,11 +1,11 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {KnownIterationMapKeys} from './_Internal'
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
-import {Equals} from '../Any/Equals'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {KnownIterationMapKeys} from './_Internal'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
+import type {Equals} from '../Any/Equals'
 
 /**
  * @hidden
@@ -36,7 +36,7 @@ Get the biggest [[Number]] within an [[Union]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Max<'-2' | '10' | '3'>      // '10'
 type test1 = N.Max<'-2' | '10' | '3', 's'> // '10'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Min.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Min.ts
index 5824347..7e8c3fa 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Min.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Min.ts
@@ -1,9 +1,9 @@
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
-import {Negate} from './Negate'
-import {Max} from './Max'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
+import type {Negate} from './Negate'
+import type {Max} from './Max'
 
 /**
 Get the smallest [[Number]] within an [[Union]]
@@ -13,7 +13,7 @@ Get the smallest [[Number]] within an [[Union]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Min<'-2' | '10' | '3'>      // '-2'
 type test1 = N.Min<'-2' | '10' | '3', 's'> // '-2'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Minus.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Minus.ts
index 08673fd..57a1679 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Minus.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Minus.ts
@@ -1,15 +1,15 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Pos} from '../Iteration/Pos'
-import {Prev} from '../Iteration/Prev'
-import {Next} from '../Iteration/Next'
-import {_IsNegative} from './IsNegative'
-import {Cast} from '../Any/Cast'
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Pos} from '../Iteration/Pos'
+import type {Prev} from '../Iteration/Prev'
+import type {Next} from '../Iteration/Next'
+import type {_IsNegative} from './IsNegative'
+import type {Cast} from '../Any/Cast'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -80,7 +80,7 @@ Subtract a [[Number]] from another one
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Minus<'2', '10'>        // '-8'
 type test1 = N.Minus<'0', '40'>        // '-40'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Negate.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Negate.ts
index b8d34e3..caa3ba6 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Negate.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Negate.ts
@@ -1,11 +1,11 @@
-import {_Minus} from './Minus'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {_Minus} from './Minus'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -21,7 +21,7 @@ Negate a [[Number]]
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Negate<'-10'>     //  '10'
 type test1 = N.Negate<'10'>      // '-10'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/NumberOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/NumberOf.ts
index 09e3b6d..b516a0f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/NumberOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/NumberOf.ts
@@ -1,8 +1,8 @@
-import {Key} from '../Iteration/Key'
-import {Pos} from '../Iteration/Pos'
-import {Numbers, KnownIterationMapKeys} from './_Internal'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {Key} from '../Iteration/Key'
+import type {Pos} from '../Iteration/Pos'
+import type {Numbers, KnownIterationMapKeys} from './_Internal'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -20,7 +20,7 @@ Transform a **`number`** into a [[Number]]
 @returns [[String]]
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.StringOf<5>  //  '5'
 type test1 = N.StringOf<-5> // '-5'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Plus.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Plus.ts
index 25ca804..d9a1ccf 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Plus.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Plus.ts
@@ -1,15 +1,15 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Pos} from '../Iteration/Pos'
-import {Prev} from '../Iteration/Prev'
-import {Next} from '../Iteration/Next'
-import {_IsNegative} from './IsNegative'
-import {Cast} from '../Any/Cast'
-import {Number} from './Number'
-import {Formats} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Pos} from '../Iteration/Pos'
+import type {Prev} from '../Iteration/Prev'
+import type {Next} from '../Iteration/Next'
+import type {_IsNegative} from './IsNegative'
+import type {Cast} from '../Any/Cast'
+import type {Number} from './Number'
+import type {Formats} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -80,7 +80,7 @@ Add a [[Number]] to another one
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Plus<'2', '10'>        // '12'
 type test1 = N.Plus<'0', '40'>        // '40'
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/Range.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/Range.ts
index 4461b4f..6e8a12f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/Range.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/Range.ts
@@ -1,17 +1,17 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Prepend} from '../List/Prepend'
-import {Prev} from '../Iteration/Prev'
-import {Next} from '../Iteration/Next'
-import {Number} from './Number'
-import {Cast} from '../Any/Cast'
-import {Formats} from '../Iteration/_Internal'
-import {Way} from '../Iteration/_Internal'
-import {Format} from '../Iteration/Format'
-import {List} from '../List/List'
-import {Extends} from '../Any/Extends'
-import {NumberMap} from '../Iteration/Maps/Number'
-import {Map} from '../Iteration/Map'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Prepend} from '../List/Prepend'
+import type {Prev} from '../Iteration/Prev'
+import type {Next} from '../Iteration/Next'
+import type {Number} from './Number'
+import type {Cast} from '../Any/Cast'
+import type {Formats} from '../Iteration/_Internal'
+import type {Way} from '../Iteration/_Internal'
+import type {Format} from '../Iteration/Format'
+import type {List} from '../List/List'
+import type {Extends} from '../Any/Extends'
+import type {NumberMap} from '../Iteration/Maps/Number'
+import type {Map} from '../Iteration/Map'
 
 /**
 @hidden
@@ -55,7 +55,7 @@ Create a range of **number**s
 @returns **`string[] | number[] | boolean[]`**
 @example
 ```ts
-import {N} from 'ts-toolbelt'
+import type {N} from 'ts-toolbelt'
 
 type test0 = N.Range<'-2', '1'>            // ['-2', '-1', '0', '1']
 type test1 = N.Range<'-2', '1', '->'>      // ['-2', '-1', '0', '1']
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Number/_Internal.ts b/node_modules/rambdax/_ts-toolbelt/src/Number/_Internal.ts
index 48374fc..c2d54a8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Number/_Internal.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Number/_Internal.ts
@@ -1,6 +1,6 @@
-import {Format} from '../Iteration/Format'
-import {Map} from '../Iteration/Map'
-import {NumberMap} from '../Iteration/Maps/Number'
+import type {Format} from '../Iteration/Format'
+import type {Map} from '../Iteration/Map'
+import type {NumberMap} from '../Iteration/Maps/Number'
 
 /**
 Describes compatible type formats
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Assign.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Assign.ts
index bb18459..4a713d9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Assign.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Assign.ts
@@ -1,13 +1,13 @@
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Merge} from './Merge'
-import {Pos} from '../Iteration/Pos'
-import {Next} from '../Iteration/Next'
-import {Length} from '../List/Length'
-import {Cast} from '../Any/Cast'
-import {List} from '../List/List'
-import {Extends} from '../Any/Extends'
-import {Depth, MergeStyle} from './_Internal'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Merge} from './Merge'
+import type {Pos} from '../Iteration/Pos'
+import type {Next} from '../Iteration/Next'
+import type {Length} from '../List/Length'
+import type {Cast} from '../Any/Cast'
+import type {List} from '../List/List'
+import type {Extends} from '../Any/Extends'
+import type {Depth, MergeStyle} from './_Internal'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/At.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/At.ts
index 760c058..5a579a9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/At.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/At.ts
@@ -1,5 +1,5 @@
-import {Key} from '../Any/Key'
-import {Boolean} from '../Boolean/Boolean'
+import type {Key} from '../Any/Key'
+import type {Boolean} from '../Boolean/Boolean'
 
 /**
 @hidden
@@ -33,7 +33,7 @@ Get in **`O`** the type of a field of key **`K`**
 @returns **`any`**
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type User = {
     info: {
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/AtLeast.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/AtLeast.ts
index c3c0f05..f7021eb 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/AtLeast.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/AtLeast.ts
@@ -1,11 +1,11 @@
-import {_Omit} from './Omit'
-import {_Pick} from './Pick'
-import {Key} from '../Any/Key'
-import {Keys} from './Keys'
-import {RequiredFlat} from './Required'
-import {Extends} from '../Any/Extends'
-import {ComputeRaw} from '../Any/Compute'
-import {OptionalFlat} from './Optional'
+import type {_Omit} from './Omit'
+import type {_Pick} from './Pick'
+import type {Key} from '../Any/Key'
+import type {Keys} from './Keys'
+import type {RequiredFlat} from './Required'
+import type {Extends} from '../Any/Extends'
+import type {ComputeRaw} from '../Any/Compute'
+import type {OptionalFlat} from './Optional'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Compulsory.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Compulsory.ts
index d045130..4362d25 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Compulsory.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Compulsory.ts
@@ -1,10 +1,10 @@
-import {Pick} from './Pick'
-import {Depth} from './_Internal'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {NonNullable} from '../Union/NonNullable'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Pick} from './Pick'
+import type {Depth} from './_Internal'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {NonNullable} from '../Union/NonNullable'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/CompulsoryKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/CompulsoryKeys.ts
index 66956f1..1cf296f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/CompulsoryKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/CompulsoryKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Diff.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Diff.ts
index 7418b06..2ed4244 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Diff.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Diff.ts
@@ -1,6 +1,6 @@
-import {Exclude} from './Exclude'
-import {Match} from '../Any/_Internal'
-import {PatchFlat} from './Patch'
+import type {Exclude} from './Exclude'
+import type {Match} from '../Any/_Internal'
+import type {PatchFlat} from './Patch'
 
 /**
 Get an [[Object]] that is the difference between **`O`** & **`O1`**
@@ -12,7 +12,7 @@ Get an [[Object]] that is the difference between **`O`** & **`O1`**
 @returns [[Object]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type Person0 = {
     name: string
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Either.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Either.ts
index 718a9db..3c01ac8 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Either.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Either.ts
@@ -1,9 +1,9 @@
-import {_Omit} from './Omit'
-import {_Pick} from './Pick'
-import {Key} from '../Any/Key'
-import {Strict} from '../Union/Strict'
-import {Boolean} from '../Boolean/Boolean'
-import {ComputeRaw} from '../Any/Compute'
+import type {_Omit} from './Omit'
+import type {_Pick} from './Pick'
+import type {Key} from '../Any/Key'
+import type {Strict} from '../Union/Strict'
+import type {Boolean} from '../Boolean/Boolean'
+import type {ComputeRaw} from '../Any/Compute'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Exclude.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Exclude.ts
index a464534..c4bf16d 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Exclude.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Exclude.ts
@@ -1,6 +1,6 @@
-import {ExcludeKeys} from './ExcludeKeys'
-import {Match} from '../Any/_Internal'
-import {Pick} from './Pick'
+import type {ExcludeKeys} from './ExcludeKeys'
+import type {Match} from '../Any/_Internal'
+import type {Pick} from './Pick'
 
 /**
 Exclude the fields of **`O1`** out of **`O`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/ExcludeKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/ExcludeKeys.ts
index 2e6f62b..140ca72 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/ExcludeKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/ExcludeKeys.ts
@@ -1,9 +1,9 @@
-import {Exclude} from '../Union/Exclude'
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
-import {At} from './At'
-import {Keys} from './Keys'
-import {Key} from '../Any/Key'
+import type {Exclude} from '../Union/Exclude'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
+import type {At} from './At'
+import type {Keys} from './Keys'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Filter.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Filter.ts
index c951f88..7e8ca3f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Filter.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Filter.ts
@@ -1,6 +1,6 @@
-import {FilterKeys} from './FilterKeys'
-import {Match} from '../Any/_Internal'
-import {Pick} from './Pick'
+import type {FilterKeys} from './FilterKeys'
+import type {Match} from '../Any/_Internal'
+import type {Pick} from './Pick'
 
 /**
 Filter out of **`O`** the fields that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/FilterKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/FilterKeys.ts
index 2def3e4..d930bbf 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/FilterKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/FilterKeys.ts
@@ -1,6 +1,6 @@
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
-import {Key} from '../Any/Key'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Has.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Has.ts
index f8a754d..c8dd164 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Has.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Has.ts
@@ -1,7 +1,7 @@
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
-import {At} from './At'
-import {Key} from '../Any/Key'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
+import type {At} from './At'
+import type {Key} from '../Any/Key'
 
 /**
 Check whether **`O`** has a field of key **`K`** that matches **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/HasPath.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/HasPath.ts
index b85ff5e..eb7be3c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/HasPath.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/HasPath.ts
@@ -1,8 +1,8 @@
-import {Match} from '../Any/_Internal'
-import {Path as OPath} from './Path'
-import {Is} from '../Any/Is'
-import {Key} from '../Any/Key'
-import {List} from '../List/List'
+import type {Match} from '../Any/_Internal'
+import type {Path as OPath} from './Path'
+import type {Is} from '../Any/Is'
+import type {Key} from '../Any/Key'
+import type {List} from '../List/List'
 
 /**
 Check whether **`O`** has nested properties that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Includes.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Includes.ts
index 24114a3..2e446bf 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Includes.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Includes.ts
@@ -1,5 +1,5 @@
-import {SelectKeys} from './SelectKeys'
-import {Match} from '../Any/_Internal'
+import type {SelectKeys} from './SelectKeys'
+import type {Match} from '../Any/_Internal'
 
 /**
 Check whether **`O`** has fields that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Intersect.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Intersect.ts
index 8ecc554..8860864 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Intersect.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Intersect.ts
@@ -1,6 +1,6 @@
-import {IntersectKeys} from './IntersectKeys'
-import {Match} from '../Any/_Internal'
-import {Pick} from './Pick'
+import type {IntersectKeys} from './IntersectKeys'
+import type {Match} from '../Any/_Internal'
+import type {Pick} from './Pick'
 
 /**
 Get the intersecting fields of **`O`** & **`O1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/IntersectKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/IntersectKeys.ts
index 193935b..63eef09 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/IntersectKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/IntersectKeys.ts
@@ -1,9 +1,9 @@
-import {Intersect} from '../Union/Intersect'
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
-import {At} from './At'
-import {Keys} from './Keys'
-import {Key} from '../Any/Key'
+import type {Intersect} from '../Union/Intersect'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
+import type {At} from './At'
+import type {Keys} from './Keys'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Invert.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Invert.ts
index ebb1425..981fb5c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Invert.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Invert.ts
@@ -1,7 +1,7 @@
-import {Record} from './Record'
-import {Key} from '../Any/Key'
-import {IntersectOf} from '../Union/IntersectOf'
-import {ComputeRaw} from '../Any/Compute'
+import type {Record} from './Record'
+import type {Key} from '../Any/Key'
+import type {IntersectOf} from '../Union/IntersectOf'
+import type {ComputeRaw} from '../Any/Compute'
 
 /**
 @hidden
@@ -19,7 +19,7 @@ Swaps the keys and values of an [[Object]] (if applicable)
 @returns [[Object]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 enum E {
     A = 'Av',
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Keys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Keys.ts
index 52610e3..346b9b4 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Keys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Keys.ts
@@ -1,4 +1,4 @@
-import {Keys as UKeys} from '../Union/Keys'
+import type {Keys as UKeys} from '../Union/Keys'
 
 /**
 Get the keys of an [[Object]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/ListOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/ListOf.ts
index 98e0faf..dbeb693 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/ListOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/ListOf.ts
@@ -1,12 +1,12 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Cast} from '../Any/Cast'
-import {Key} from '../Iteration/Key'
-import {Next} from '../Iteration/Next'
-import {_Append} from '../List/Append'
-import {Exclude} from '../Union/Exclude'
-import {List} from '../List/List'
-import {Extends} from '../Any/_api'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Cast} from '../Any/Cast'
+import type {Key} from '../Iteration/Key'
+import type {Next} from '../Iteration/Next'
+import type {_Append} from '../List/Append'
+import type {Exclude} from '../Union/Exclude'
+import type {List} from '../List/List'
+import type {Extends} from '../Any/_api'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Merge.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Merge.ts
index a3abf8d..2c72284 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Merge.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Merge.ts
@@ -1,14 +1,14 @@
-import {AtBasic} from './At'
-import {OptionalKeys} from './OptionalKeys'
-import {Key} from '../Any/Key'
-import {Extends} from '../Any/Extends'
-import {Or} from '../Boolean/Or'
-import {ObjectOf} from '../List/ObjectOf'
-import {ListOf} from './ListOf'
-import {List} from '../List/List'
-import {Depth, Anyfy, MergeStyle} from './_Internal'
-import {NonNullable} from '../Union/NonNullable'
-import {BuiltInObject} from '../Misc/BuiltInObject'
+import type {AtBasic} from './At'
+import type {OptionalKeys} from './OptionalKeys'
+import type {Key} from '../Any/Key'
+import type {Extends} from '../Any/Extends'
+import type {Or} from '../Boolean/Or'
+import type {ObjectOf} from '../List/ObjectOf'
+import type {ListOf} from './ListOf'
+import type {List} from '../List/List'
+import type {Depth, Anyfy, MergeStyle} from './_Internal'
+import type {NonNullable} from '../Union/NonNullable'
+import type {BuiltInObject} from '../Misc/BuiltInObject'
 
 /**
 @hidden
@@ -113,7 +113,7 @@ fields will be handled gracefully.
 @returns [[Object]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type O = {
     name?: string
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/MergeAll.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/MergeAll.ts
index 958df4d..bd27bbe 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/MergeAll.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/MergeAll.ts
@@ -1,13 +1,13 @@
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Merge} from './Merge'
-import {Pos} from '../Iteration/Pos'
-import {Next} from '../Iteration/Next'
-import {Length} from '../List/Length'
-import {Cast} from '../Any/Cast'
-import {List} from '../List/List'
-import {Extends} from '../Any/Extends'
-import {Depth, MergeStyle} from './_Internal'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Merge} from './Merge'
+import type {Pos} from '../Iteration/Pos'
+import type {Next} from '../Iteration/Next'
+import type {Length} from '../List/Length'
+import type {Cast} from '../Any/Cast'
+import type {List} from '../List/List'
+import type {Extends} from '../Any/Extends'
+import type {Depth, MergeStyle} from './_Internal'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Modify.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Modify.ts
index 903c76f..363d1bf 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Modify.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Modify.ts
@@ -1,7 +1,7 @@
-import {At} from './At'
-import {Replace} from '../Union/Replace'
-import {x} from '../Any/x'
-import {Exclude} from '../Union/Exclude'
+import type {At} from './At'
+import type {Replace} from '../Union/Replace'
+import type {x} from '../Any/x'
+import type {Exclude} from '../Union/Exclude'
 
 /**
 Modify **`O`** with **`OMod`** & the [[x]] placeholder
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullable.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullable.ts
index 4ff2199..d48eb64 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullable.ts
@@ -1,10 +1,10 @@
-import {NonNullable as UNonNullable} from '../Union/NonNullable'
-import {Depth} from './_Internal'
-import {Pick} from './Pick'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {NonNullable as UNonNullable} from '../Union/NonNullable'
+import type {Depth} from './_Internal'
+import type {Pick} from './Pick'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullableKeys.ts
index 4ab3f37..1b5d94f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/NonNullableKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Nullable.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Nullable.ts
index e6ba186..1703b7f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Nullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Nullable.ts
@@ -1,10 +1,10 @@
-import {Nullable as UNullable} from '../Union/Nullable'
-import {Depth} from './_Internal'
-import {Pick} from './Pick'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Nullable as UNullable} from '../Union/Nullable'
+import type {Depth} from './_Internal'
+import type {Pick} from './Pick'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/NullableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/NullableKeys.ts
index e8634e1..aa6bb9c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/NullableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/NullableKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Omit.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Omit.ts
index edc47f9..188ebab 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Omit.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Omit.ts
@@ -1,7 +1,7 @@
-import {_Pick} from './Pick'
-import {Exclude} from '../Union/Exclude'
-import {Key} from '../Any/Key'
-import {Keys} from './Keys'
+import type {_Pick} from './Pick'
+import type {Exclude} from '../Union/Exclude'
+import type {Key} from '../Any/Key'
+import type {Keys} from './Keys'
 
 /**
  * @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Optional.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Optional.ts
index 8b3f6e1..cc4f4d7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Optional.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Optional.ts
@@ -1,9 +1,9 @@
-import {Pick} from './Pick'
-import {Depth} from './_Internal'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Pick} from './Pick'
+import type {Depth} from './_Internal'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/OptionalKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/OptionalKeys.ts
index 78bc317..893d9cc 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/OptionalKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/OptionalKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Merge.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Merge.ts
index 6517ea3..97757a1 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Merge.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Merge.ts
@@ -1,13 +1,13 @@
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {Merge as OMerge} from '../Merge'
-import {Length} from '../../List/Length'
-import {List} from '../../List/List'
-import {Depth} from '../_Internal'
-import {Boolean} from '../../Boolean/Boolean'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {Merge as OMerge} from '../Merge'
+import type {Length} from '../../List/Length'
+import type {List} from '../../List/List'
+import type {Depth} from '../_Internal'
+import type {Boolean} from '../../Boolean/Boolean'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Omit.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Omit.ts
index e877200..29dfe0b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Omit.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Omit.ts
@@ -1,12 +1,12 @@
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {_Omit as _OOmit} from '../Omit'
-import {LastIndex} from '../../List/LastIndex'
-import {List} from '../../List/List'
-import {Boolean} from '../../Boolean/Boolean'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {_Omit as _OOmit} from '../Omit'
+import type {LastIndex} from '../../List/LastIndex'
+import type {List} from '../../List/List'
+import type {Boolean} from '../../Boolean/Boolean'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Pick.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Pick.ts
index 72c512a..8b3d89e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Pick.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Pick.ts
@@ -1,12 +1,12 @@
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {_Pick as _OPick} from '../Pick'
-import {LastIndex} from '../../List/LastIndex'
-import {List} from '../../List/List'
-import {Boolean} from '../../Boolean/Boolean'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {_Pick as _OPick} from '../Pick'
+import type {LastIndex} from '../../List/LastIndex'
+import type {List} from '../../List/List'
+import type {Boolean} from '../../Boolean/Boolean'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Readonly.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Readonly.ts
index b3cdb15..6f42198 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Readonly.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Readonly.ts
@@ -1,13 +1,13 @@
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {Readonly as OReadonly} from '../Readonly'
-import {LastIndex} from '../../List/LastIndex'
-import {List} from '../../List/List'
-import {Depth} from '../_Internal'
-import {Boolean} from '../../Boolean/Boolean'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {Readonly as OReadonly} from '../Readonly'
+import type {LastIndex} from '../../List/LastIndex'
+import type {List} from '../../List/List'
+import type {Depth} from '../_Internal'
+import type {Boolean} from '../../Boolean/Boolean'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Record.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Record.ts
index a258a50..8550f49 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Record.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Record.ts
@@ -1,11 +1,11 @@
-import {Modx} from '../_Internal'
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {LastIndex} from '../../List/LastIndex'
-import {List} from '../../List/List'
+import type {Modx} from '../_Internal'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {LastIndex} from '../../List/LastIndex'
+import type {List} from '../../List/List'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Update.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Update.ts
index 06133b3..1f8f0b7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/P/Update.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/P/Update.ts
@@ -1,12 +1,12 @@
-import {IterationOf} from '../../Iteration/IterationOf'
-import {Iteration} from '../../Iteration/Iteration'
-import {Pos} from '../../Iteration/Pos'
-import {Next} from '../../Iteration/Next'
-import {Key} from '../../Any/Key'
-import {LastIndex} from '../../List/LastIndex'
-import {List} from '../../List/List'
-import {Record} from '../Record'
-import {Patch} from '../Patch'
+import type {IterationOf} from '../../Iteration/IterationOf'
+import type {Iteration} from '../../Iteration/Iteration'
+import type {Pos} from '../../Iteration/Pos'
+import type {Next} from '../../Iteration/Next'
+import type {Key} from '../../Any/Key'
+import type {LastIndex} from '../../List/LastIndex'
+import type {List} from '../../List/List'
+import type {Record} from '../Record'
+import type {Patch} from '../Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Partial.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Partial.ts
index 8a14842..74f6ae1 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Partial.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Partial.ts
@@ -1,5 +1,5 @@
-import {OptionalPart} from './Optional'
-import {Depth} from './_Internal'
+import type {OptionalPart} from './Optional'
+import type {Depth} from './_Internal'
 
 /**
 Make all fields of **`O`** optional (deeply or not)
@@ -8,7 +8,7 @@ Make all fields of **`O`** optional (deeply or not)
 @returns [[Object]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type L = {a: {b: {c: 2}}, b: 1}
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Patch.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Patch.ts
index 0641648..241e24a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Patch.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Patch.ts
@@ -1,13 +1,13 @@
-import {AtBasic} from './At'
-import {Key} from '../Any/Key'
-import {Extends} from '../Any/Extends'
-import {ObjectOf} from '../List/ObjectOf'
-import {ListOf} from './ListOf'
-import {List} from '../List/List'
-import {Depth, MergeStyle} from './_Internal'
-import {BuiltInObject} from '../Misc/BuiltInObject'
-import {Omit} from './Omit'
-import {Keys} from './Keys'
+import type {AtBasic} from './At'
+import type {Key} from '../Any/Key'
+import type {Extends} from '../Any/Extends'
+import type {ObjectOf} from '../List/ObjectOf'
+import type {ListOf} from './ListOf'
+import type {List} from '../List/List'
+import type {Depth, MergeStyle} from './_Internal'
+import type {BuiltInObject} from '../Misc/BuiltInObject'
+import type {Omit} from './Omit'
+import type {Keys} from './Keys'
 
 /**
 @hidden
@@ -103,7 +103,7 @@ with the ones of `O1`.
 @returns [[Object]]
 @example
 ```ts
-import {O} from 'ts-toolbelt'
+import type {O} from 'ts-toolbelt'
 
 type O = {
     name?: string
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/PatchAll.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/PatchAll.ts
index 8785387..9a0e938 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/PatchAll.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/PatchAll.ts
@@ -1,13 +1,13 @@
-import {Iteration} from '../Iteration/Iteration'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Pos} from '../Iteration/Pos'
-import {Next} from '../Iteration/Next'
-import {Length} from '../List/Length'
-import {Cast} from '../Any/Cast'
-import {List} from '../List/List'
-import {Extends} from '../Any/Extends'
-import {Depth, MergeStyle} from './_Internal'
-import {Patch} from './Patch'
+import type {Iteration} from '../Iteration/Iteration'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Pos} from '../Iteration/Pos'
+import type {Next} from '../Iteration/Next'
+import type {Length} from '../List/Length'
+import type {Cast} from '../Any/Cast'
+import type {List} from '../List/List'
+import type {Extends} from '../Any/Extends'
+import type {Depth, MergeStyle} from './_Internal'
+import type {Patch} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Path.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Path.ts
index 7c44e44..b9d8151 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Path.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Path.ts
@@ -1,15 +1,15 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Next} from '../Iteration/Next'
-import {Pos} from '../Iteration/Pos'
-import {Length} from '../List/Length'
-import {At} from './At'
-import {Cast} from '../Any/Cast'
-import {NonNullable} from '../Union/NonNullable'
-import {Key} from '../Any/Key'
-import {List} from '../List/List'
-import {Boolean} from '../Boolean/Boolean'
-import {Extends} from '../Any/Extends'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Next} from '../Iteration/Next'
+import type {Pos} from '../Iteration/Pos'
+import type {Length} from '../List/Length'
+import type {At} from './At'
+import type {Cast} from '../Any/Cast'
+import type {NonNullable} from '../Union/NonNullable'
+import type {Key} from '../Any/Key'
+import type {List} from '../List/List'
+import type {Boolean} from '../Boolean/Boolean'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/PathValid.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/PathValid.ts
index cb192e5..fbc8865 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/PathValid.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/PathValid.ts
@@ -1,16 +1,16 @@
-import {IterationOf} from '../Iteration/IterationOf'
-import {Iteration} from '../Iteration/Iteration'
-import {Next} from '../Iteration/Next'
-import {Pos} from '../Iteration/Pos'
-import {At} from './At'
-import {Cast} from '../Any/Cast'
-import {NonNullable} from '../Union/NonNullable'
-import {Update} from '../List/Update'
-import {Key} from '../Iteration/Key'
-import {Key as AKey} from '../Any/Key'
-import {List} from '../List/List'
-import {Length} from '../List/Length'
-import {Extends} from '../Any/_api'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Iteration} from '../Iteration/Iteration'
+import type {Next} from '../Iteration/Next'
+import type {Pos} from '../Iteration/Pos'
+import type {At} from './At'
+import type {Cast} from '../Any/Cast'
+import type {NonNullable} from '../Union/NonNullable'
+import type {Update} from '../List/Update'
+import type {Key} from '../Iteration/Key'
+import type {Key as AKey} from '../Any/Key'
+import type {List} from '../List/List'
+import type {Length} from '../List/Length'
+import type {Extends} from '../Any/_api'
 
 /**
 @hidden
@@ -47,7 +47,7 @@ export type _PathValid<O extends object, Path extends List<AKey>> =
  * @returns **`Index[]`**
  * @example
  * ```ts
- * import {A, L, O} from 'ts-toolbelt'
+ * import type {A, L, O} from 'ts-toolbelt'
  *
  * // Get a property in an object `o` at any depth with `path`
  * // `A.Cast<P, O.PathValid<O, P>>` makes sure `path` is valid
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Paths.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Paths.ts
index f89efbd..476ad64 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Paths.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Paths.ts
@@ -1,11 +1,11 @@
-import {OptionalFlat} from '../Object/Optional'
-import {Key} from '../Any/Key'
-import {NonNullableFlat} from '../Object/NonNullable'
-import {_Concat} from '../List/Concat'
-import {Cast} from '../Any/Cast'
-import {Equals} from '../Any/Equals'
-import {List} from '../List/List'
-import {_Append} from '../List/Append'
+import type {OptionalFlat} from '../Object/Optional'
+import type {Key} from '../Any/Key'
+import type {NonNullableFlat} from '../Object/NonNullable'
+import type {_Concat} from '../List/Concat'
+import type {Cast} from '../Any/Cast'
+import type {Equals} from '../Any/Equals'
+import type {List} from '../List/List'
+import type {_Append} from '../List/Append'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Pick.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Pick.ts
index 2fe002b..d8d118b 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Pick.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Pick.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Readonly.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Readonly.ts
index 2f16848..74d6809 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Readonly.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Readonly.ts
@@ -1,9 +1,9 @@
-import {Pick} from './Pick'
-import {Depth} from './_Internal'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from '../Union/Keys'
-import {PatchFlat} from './Patch'
+import type {Pick} from './Pick'
+import type {Depth} from './_Internal'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from '../Union/Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/ReadonlyKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/ReadonlyKeys.ts
index 5a7ee6d..dc04046 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/ReadonlyKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/ReadonlyKeys.ts
@@ -1,5 +1,5 @@
-import {Equals} from '../Any/Equals'
-import {Key} from '../Any/Key'
+import type {Equals} from '../Any/Equals'
+import type {Key} from '../Any/Key'
 
 // Credit https://stackoverflow.com/a/52473108/3570903
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Record.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Record.ts
index 06c01d6..4ec55e0 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Record.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Record.ts
@@ -1,5 +1,5 @@
-import {Modx} from './_Internal'
-import {Key} from '../Any/Key'
+import type {Modx} from './_Internal'
+import type {Key} from '../Any/Key'
 
 /**
 Create an object filled with **`A`** for the fields **`K`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Replace.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Replace.ts
index 9e5633d..f843c8f 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Replace.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Replace.ts
@@ -1,5 +1,5 @@
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Required.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Required.ts
index d018daf..b9cda14 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Required.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Required.ts
@@ -1,9 +1,9 @@
-import {Pick} from './Pick'
-import {Depth} from './_Internal'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Pick} from './Pick'
+import type {Depth} from './_Internal'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/RequiredKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/RequiredKeys.ts
index 00efa31..cab6d79 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/RequiredKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/RequiredKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Select.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Select.ts
index c3e91c0..f3da27a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Select.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Select.ts
@@ -1,6 +1,6 @@
-import {SelectKeys} from './SelectKeys'
-import {Match} from '../Any/_Internal'
-import {Pick} from './Pick'
+import type {SelectKeys} from './SelectKeys'
+import type {Match} from '../Any/_Internal'
+import type {Pick} from './Pick'
 
 /**
 Extract the fields of **`O`** that match **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/SelectKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/SelectKeys.ts
index 35dbd25..be3af80 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/SelectKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/SelectKeys.ts
@@ -1,6 +1,6 @@
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
-import {Key} from '../Any/Key'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Undefinable.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Undefinable.ts
index aa468c8..89d3313 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Undefinable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Undefinable.ts
@@ -1,9 +1,9 @@
-import {Depth} from './_Internal'
-import {Pick} from './Pick'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Depth} from './_Internal'
+import type {Pick} from './Pick'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/UndefinableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/UndefinableKeys.ts
index 4de4ca3..bdd8d4e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/UndefinableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/UndefinableKeys.ts
@@ -1,4 +1,4 @@
-import {Key} from '../Any/Key'
+import type {Key} from '../Any/Key'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/UnionOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/UnionOf.ts
index d5360cb..b41105c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/UnionOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/UnionOf.ts
@@ -1,5 +1,5 @@
-import {Keys} from './Keys'
-import {At} from './At'
+import type {Keys} from './Keys'
+import type {At} from './At'
 
 /**
 Transform an [[Object]] into an [[Union]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Unionize.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Unionize.ts
index d847331..604cf20 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Unionize.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Unionize.ts
@@ -1,5 +1,5 @@
-import {At} from './At'
-import {Key} from '../Any/Key'
+import type {At} from './At'
+import type {Key} from '../Any/Key'
 
 /**
 Make the fields of **`O`** union the ones of **`O1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Update.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Update.ts
index 0e8d3f3..8a777a3 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Update.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Update.ts
@@ -1,6 +1,6 @@
-import {Key} from '../Any/Key'
-import {x} from '../Any/x'
-import {Replace} from '../Union/Replace'
+import type {Key} from '../Any/Key'
+import type {x} from '../Any/x'
+import type {Replace} from '../Union/Replace'
 
 /**
 Update in **`O`** the fields of key **`K`** with **`A`**.
@@ -11,7 +11,7 @@ Use the [[x]] placeholder to get the current field type.
 @returns [[Object]]
 @example
 ```ts
-import {A, O} from 'ts-toolbelt'
+import type {A, O} from 'ts-toolbelt'
 
 type User = {
     info: {
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/Writable.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/Writable.ts
index 367104c..1c03931 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/Writable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/Writable.ts
@@ -1,9 +1,9 @@
-import {Pick} from './Pick'
-import {Depth} from './_Internal'
-import {Key} from '../Any/Key'
-import {Contains} from '../Any/Contains'
-import {Keys} from './Keys'
-import {PatchFlat} from './Patch'
+import type {Pick} from './Pick'
+import type {Depth} from './_Internal'
+import type {Key} from '../Any/Key'
+import type {Contains} from '../Any/Contains'
+import type {Keys} from './Keys'
+import type {PatchFlat} from './Patch'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Object/WritableKeys.ts b/node_modules/rambdax/_ts-toolbelt/src/Object/WritableKeys.ts
index 259d0b3..bd73c56 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Object/WritableKeys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Object/WritableKeys.ts
@@ -1,5 +1,5 @@
-import {Equals} from '../Any/Equals'
-import {Key} from '../Any/Key'
+import type {Equals} from '../Any/Equals'
+import type {Key} from '../Any/Key'
 
 // Credit https://stackoverflow.com/a/52473108/3570903
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/String/Format.ts b/node_modules/rambdax/_ts-toolbelt/src/String/Format.ts
index b212b23..75f8946 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/String/Format.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/String/Format.ts
@@ -1,7 +1,7 @@
-import {Formats} from './_Internal'
-import {Pos} from '../Iteration/Pos'
-import {IterationOf} from '../Iteration/IterationOf'
-import {Extends} from '../Any/Extends'
+import type {Formats} from './_Internal'
+import type {Pos} from '../Iteration/Pos'
+import type {IterationOf} from '../Iteration/IterationOf'
+import type {Extends} from '../Any/Extends'
 
 /**
 Change the format of a **`string`**
@@ -9,7 +9,7 @@ Change the format of a **`string`**
 @returns **`string | number | boolean`**
 @example
 ```ts
-import {S} from 'ts-toolbelt'
+import type {S} from 'ts-toolbelt'
 
 type test0 = S.Format<'30', 'b'> // True
 type test1 = S.Format<'30', 'n'> // 30
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Test.ts b/node_modules/rambdax/_ts-toolbelt/src/Test.ts
index ec4835b..d8d120a 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Test.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Test.ts
@@ -1,7 +1,7 @@
-import {Repeat} from './List/Repeat'
-import {Equals} from './Any/Equals'
-import {ComputeRaw} from './Any/Compute'
-import {True, False, Boolean} from './Boolean/Boolean'
+import type {Repeat} from './List/Repeat'
+import type {Equals} from './Any/Equals'
+import type {ComputeRaw} from './Any/Compute'
+import type {True, False, Boolean} from './Boolean/Boolean'
 
 /**
 Test should pass
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Diff.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Diff.ts
index a736571..b73cbd7 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Diff.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Diff.ts
@@ -1,5 +1,5 @@
-import {Exclude} from './Exclude'
-import {Union} from './Union'
+import type {Exclude} from './Exclude'
+import type {Union} from './Union'
 
 /**
 Get an [[Union]] that is the difference between **`U1`** & **`U2`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Exclude.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Exclude.ts
index ad1f42d..c0b5dd3 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Exclude.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Exclude.ts
@@ -1,4 +1,4 @@
-import {Union} from './Union'
+import type {Union} from './Union'
 
 /**
 Remove **`M`** out of **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Filter.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Filter.ts
index 934f267..5a616fe 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Filter.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Filter.ts
@@ -1,6 +1,6 @@
-import {Union} from './Union'
-import {Match} from '../Any/_Internal'
-import {Is} from '../Any/Is'
+import type {Union} from './Union'
+import type {Match} from '../Any/_Internal'
+import type {Is} from '../Any/Is'
 
 /**
 Remove **`M`** out of **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Has.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Has.ts
index 709e1d9..fa818e5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Has.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Has.ts
@@ -1,6 +1,6 @@
-import {Union} from './Union'
-import {Not} from '../Boolean/Not'
-import {Extends} from '../Any/Extends'
+import type {Union} from './Union'
+import type {Not} from '../Boolean/Not'
+import type {Extends} from '../Any/Extends'
 
 /**
 Check whether **`U`** contains **`U1`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Intersect.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Intersect.ts
index 3678487..1482194 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Intersect.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Intersect.ts
@@ -1,4 +1,4 @@
-import {Union} from './Union'
+import type {Union} from './Union'
 
 /**
 Get the intersection of **`U1`** & **`U2`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/IntersectOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/IntersectOf.ts
index 4330206..a075e1c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/IntersectOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/IntersectOf.ts
@@ -1,4 +1,4 @@
-import {Union} from './Union'
+import type {Union} from './Union'
 
 // Credit https://stackoverflow.com/a/50375286/3570903
 
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Keys.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Keys.ts
index 0baeba3..4d27a7e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Keys.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Keys.ts
@@ -1,5 +1,5 @@
-import {Union} from './Union'
-import {Key} from '../Any/Key'
+import type {Union} from './Union'
+import type {Key} from '../Any/Key'
 
 /**
 Get the keys of a [[Union]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Last.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Last.ts
index 9ce4aaa..7e99d3e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Last.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Last.ts
@@ -1,5 +1,5 @@
-import {IntersectOf} from './IntersectOf'
-import {Union} from './Union'
+import type {IntersectOf} from './IntersectOf'
+import type {Union} from './Union'
 
 /**
 Get the last item within an [[Union]]
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/ListOf.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/ListOf.ts
index d4ac05a..09efee9 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/ListOf.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/ListOf.ts
@@ -1,10 +1,10 @@
-import {Last} from './Last'
-import {Prepend} from '../List/Prepend'
-import {Exclude} from './Exclude'
-import {List} from '../List/List'
-import {Union} from './Union'
-import {Cast} from '../Any/Cast'
-import {Extends} from '../Any/Extends'
+import type {Last} from './Last'
+import type {Prepend} from '../List/Prepend'
+import type {Exclude} from './Exclude'
+import type {List} from '../List/List'
+import type {Union} from './Union'
+import type {Cast} from '../Any/Cast'
+import type {Extends} from '../Any/Extends'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Merge.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Merge.ts
index 3075a65..5d33f7e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Merge.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Merge.ts
@@ -1,8 +1,8 @@
-import {At} from '../Object/At'
-import {Overwrite} from '../Object/Overwrite'
-import {ComputeRaw} from '../Any/Compute'
-import {IntersectOf} from './IntersectOf'
-import {Strict} from './Strict'
+import type {At} from '../Object/At'
+import type {Overwrite} from '../Object/Overwrite'
+import type {ComputeRaw} from '../Any/Compute'
+import type {IntersectOf} from './IntersectOf'
+import type {Strict} from './Strict'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/NonNullable.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/NonNullable.ts
index 8501ba2..c86dec6 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/NonNullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/NonNullable.ts
@@ -1,5 +1,5 @@
-import {Exclude} from './Exclude'
-import {Union} from './Union'
+import type {Exclude} from './Exclude'
+import type {Union} from './Union'
 
 /**
 Remove **`undefined`** & **`null`** out of **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Nullable.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Nullable.ts
index e06590e..29faf86 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Nullable.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Nullable.ts
@@ -1,4 +1,4 @@
-import {Union} from './Union'
+import type {Union} from './Union'
 
 /**
 Add **`undefined | null`** to **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Pop.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Pop.ts
index 0fb53b4..d6a598c 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Pop.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Pop.ts
@@ -1,6 +1,6 @@
-import {Exclude} from './Exclude'
-import {Last} from './Last'
-import {Union} from './Union'
+import type {Exclude} from './Exclude'
+import type {Last} from './Last'
+import type {Union} from './Union'
 
 /**
 Remove an item out of **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Replace.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Replace.ts
index 48f5a21..480972e 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Replace.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Replace.ts
@@ -1,4 +1,4 @@
-import {Union} from './Union'
+import type {Union} from './Union'
 
 /**
 Replace **`M`** with **`A`** in **`U`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Select.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Select.ts
index 02ad218..e6ed572 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Select.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Select.ts
@@ -1,6 +1,6 @@
-import {Union} from './Union'
-import {Is} from '../Any/Is'
-import {Match} from '../Any/_Internal'
+import type {Union} from './Union'
+import type {Is} from '../Any/Is'
+import type {Match} from '../Any/_Internal'
 
 /**
 Extract the part of **`U`** that matches **`M`**
diff --git a/node_modules/rambdax/_ts-toolbelt/src/Union/Strict.ts b/node_modules/rambdax/_ts-toolbelt/src/Union/Strict.ts
index 3d6f927..56a9ab5 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/Union/Strict.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/Union/Strict.ts
@@ -1,7 +1,7 @@
-import {ComputeRaw} from '../Any/Compute'
-import {Keys} from './Keys'
-import {OptionalFlat} from '../Object/Optional'
-import {Record} from '../Object/Record'
+import type {ComputeRaw} from '../Any/Compute'
+import type {Keys} from './Keys'
+import type {OptionalFlat} from '../Object/Optional'
+import type {Record} from '../Object/Record'
 
 /**
 @hidden
diff --git a/node_modules/rambdax/_ts-toolbelt/src/ts-toolbelt.ts b/node_modules/rambdax/_ts-toolbelt/src/ts-toolbelt.ts
index ddf6eb0..fdddb56 100644
--- a/node_modules/rambdax/_ts-toolbelt/src/ts-toolbelt.ts
+++ b/node_modules/rambdax/_ts-toolbelt/src/ts-toolbelt.ts
@@ -65,7 +65,7 @@ export * as Union from './Union/_api'
 // -> Remember that simple mapped types distribute well over unions and preserve them (no problem)
 //
 // => For recursive types that re-use each other, we MUST NOT use the distributed version since they all do it
-//    We must import the version of the type that is named `type _<name>`. This is the non-distributed version
+//    We must import type the version of the type that is named `type _<name>`. This is the non-distributed version
 //    (otherwise, we would distribute over something that is already distributed (pointless, it uses resources))
 
 // ---------------------------------------------------------------------------------------
diff --git a/node_modules/rambdax/package-lock.json b/node_modules/rambdax/package-lock.json
new file mode 100644
index 0000000..77ea26b
--- /dev/null
+++ b/node_modules/rambdax/package-lock.json
@@ -0,0 +1,1390 @@
+{
+  "name": "rambdax",
+  "version": "6.0.0",
+  "lockfileVersion": 1,
+  "requires": true,
+  "dependencies": {
+    "@yarnpkg/lockfile": {
+      "version": "1.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/@yarnpkg/lockfile/-/lockfile-1.1.0.tgz",
+      "integrity": "sha1-53qX+9NFt22DJF7c0X05OxtB+zE=",
+      "dev": true
+    },
+    "ansi-styles": {
+      "version": "3.2.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/ansi-styles/-/ansi-styles-3.2.1.tgz",
+      "integrity": "sha1-QfuyAkPlCxK+DwS43tvwdSDOhB0=",
+      "dev": true,
+      "requires": {
+        "color-convert": "^1.9.0"
+      }
+    },
+    "arr-diff": {
+      "version": "4.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/arr-diff/-/arr-diff-4.0.0.tgz",
+      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=",
+      "dev": true
+    },
+    "arr-flatten": {
+      "version": "1.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/arr-flatten/-/arr-flatten-1.1.0.tgz",
+      "integrity": "sha1-NgSLv/TntH4TZkQxbJlmnqWukfE=",
+      "dev": true
+    },
+    "arr-union": {
+      "version": "3.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/arr-union/-/arr-union-3.1.0.tgz",
+      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",
+      "dev": true
+    },
+    "array-unique": {
+      "version": "0.3.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/array-unique/-/array-unique-0.3.2.tgz",
+      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=",
+      "dev": true
+    },
+    "assign-symbols": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/assign-symbols/-/assign-symbols-1.0.0.tgz",
+      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=",
+      "dev": true
+    },
+    "atob": {
+      "version": "2.1.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/atob/-/atob-2.1.2.tgz",
+      "integrity": "sha1-bZUX654DDSQ2ZmZR6GvZ9vE1M8k=",
+      "dev": true
+    },
+    "balanced-match": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/balanced-match/-/balanced-match-1.0.0.tgz",
+      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
+      "dev": true
+    },
+    "base": {
+      "version": "0.11.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/base/-/base-0.11.2.tgz",
+      "integrity": "sha1-e95c7RRbbVUakNuH+DxVi060io8=",
+      "dev": true,
+      "requires": {
+        "cache-base": "^1.0.1",
+        "class-utils": "^0.3.5",
+        "component-emitter": "^1.2.1",
+        "define-property": "^1.0.0",
+        "isobject": "^3.0.1",
+        "mixin-deep": "^1.2.0",
+        "pascalcase": "^0.1.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha1-FpwvbT3x+ZJhgHI2XJsOofaHhlY=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha1-2Eh2Mh0Oet0DmQQGq7u9NrqSaMc=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha1-OxWXRqZmBLBPjIFSS6NlxfFNhuw=",
+          "dev": true,
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        }
+      }
+    },
+    "brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha1-PH/L9SnYcibz0vUrlm/1Jx60Qd0=",
+      "dev": true,
+      "requires": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "braces": {
+      "version": "2.3.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/braces/-/braces-2.3.2.tgz",
+      "integrity": "sha1-WXn9PxTNUxVl5fot8av/8d+u5yk=",
+      "dev": true,
+      "requires": {
+        "arr-flatten": "^1.1.0",
+        "array-unique": "^0.3.2",
+        "extend-shallow": "^2.0.1",
+        "fill-range": "^4.0.0",
+        "isobject": "^3.0.1",
+        "repeat-element": "^1.1.2",
+        "snapdragon": "^0.8.1",
+        "snapdragon-node": "^2.0.1",
+        "split-string": "^3.0.2",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "cache-base": {
+      "version": "1.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/cache-base/-/cache-base-1.0.1.tgz",
+      "integrity": "sha1-Cn9GQWgxyLZi7jb+TnxZ129marI=",
+      "dev": true,
+      "requires": {
+        "collection-visit": "^1.0.0",
+        "component-emitter": "^1.2.1",
+        "get-value": "^2.0.6",
+        "has-value": "^1.0.0",
+        "isobject": "^3.0.1",
+        "set-value": "^2.0.0",
+        "to-object-path": "^0.3.0",
+        "union-value": "^1.0.0",
+        "unset-value": "^1.0.0"
+      }
+    },
+    "chalk": {
+      "version": "2.4.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/chalk/-/chalk-2.4.2.tgz",
+      "integrity": "sha1-zUJUFnelQzPPVBpJEIwUMrRMlCQ=",
+      "dev": true,
+      "requires": {
+        "ansi-styles": "^3.2.1",
+        "escape-string-regexp": "^1.0.5",
+        "supports-color": "^5.3.0"
+      }
+    },
+    "ci-info": {
+      "version": "2.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/ci-info/-/ci-info-2.0.0.tgz",
+      "integrity": "sha1-Z6npZL4xpR4V5QENWObxKDQAL0Y=",
+      "dev": true
+    },
+    "class-utils": {
+      "version": "0.3.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/class-utils/-/class-utils-0.3.6.tgz",
+      "integrity": "sha1-+TNprouafOAv1B+q0MqDAzGQxGM=",
+      "dev": true,
+      "requires": {
+        "arr-union": "^3.1.0",
+        "define-property": "^0.2.5",
+        "isobject": "^3.0.0",
+        "static-extend": "^0.1.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        }
+      }
+    },
+    "collection-visit": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/collection-visit/-/collection-visit-1.0.0.tgz",
+      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",
+      "dev": true,
+      "requires": {
+        "map-visit": "^1.0.0",
+        "object-visit": "^1.0.0"
+      }
+    },
+    "color-convert": {
+      "version": "1.9.3",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/color-convert/-/color-convert-1.9.3.tgz",
+      "integrity": "sha1-u3GFBpDh8TZWfeYp0tVHHe2kweg=",
+      "dev": true,
+      "requires": {
+        "color-name": "1.1.3"
+      }
+    },
+    "color-name": {
+      "version": "1.1.3",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/color-name/-/color-name-1.1.3.tgz",
+      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
+      "dev": true
+    },
+    "component-emitter": {
+      "version": "1.3.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/component-emitter/-/component-emitter-1.3.0.tgz",
+      "integrity": "sha1-FuQHD7qK4ptnnyIVhT7hgasuq8A=",
+      "dev": true
+    },
+    "concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
+      "dev": true
+    },
+    "copy-descriptor": {
+      "version": "0.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
+      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",
+      "dev": true
+    },
+    "cross-spawn": {
+      "version": "6.0.5",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/cross-spawn/-/cross-spawn-6.0.5.tgz",
+      "integrity": "sha1-Sl7Hxk364iw6FBJNus3uhG2Ay8Q=",
+      "dev": true,
+      "requires": {
+        "nice-try": "^1.0.4",
+        "path-key": "^2.0.1",
+        "semver": "^5.5.0",
+        "shebang-command": "^1.2.0",
+        "which": "^1.2.9"
+      }
+    },
+    "debug": {
+      "version": "2.6.9",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/debug/-/debug-2.6.9.tgz",
+      "integrity": "sha1-XRKFFd8TT/Mn6QpMk/Tgd6U2NB8=",
+      "dev": true,
+      "requires": {
+        "ms": "2.0.0"
+      }
+    },
+    "decode-uri-component": {
+      "version": "0.2.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/decode-uri-component/-/decode-uri-component-0.2.0.tgz",
+      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",
+      "dev": true
+    },
+    "define-property": {
+      "version": "2.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-2.0.2.tgz",
+      "integrity": "sha1-1Flono1lS6d+AqgX+HENcCyxbp0=",
+      "dev": true,
+      "requires": {
+        "is-descriptor": "^1.0.2",
+        "isobject": "^3.0.1"
+      },
+      "dependencies": {
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha1-FpwvbT3x+ZJhgHI2XJsOofaHhlY=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha1-2Eh2Mh0Oet0DmQQGq7u9NrqSaMc=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha1-OxWXRqZmBLBPjIFSS6NlxfFNhuw=",
+          "dev": true,
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        }
+      }
+    },
+    "escape-string-regexp": {
+      "version": "1.0.5",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
+      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
+      "dev": true
+    },
+    "expand-brackets": {
+      "version": "2.1.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/expand-brackets/-/expand-brackets-2.1.4.tgz",
+      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",
+      "dev": true,
+      "requires": {
+        "debug": "^2.3.3",
+        "define-property": "^0.2.5",
+        "extend-shallow": "^2.0.1",
+        "posix-character-classes": "^0.1.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "extend-shallow": {
+      "version": "3.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-3.0.2.tgz",
+      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",
+      "dev": true,
+      "requires": {
+        "assign-symbols": "^1.0.0",
+        "is-extendable": "^1.0.1"
+      },
+      "dependencies": {
+        "is-extendable": {
+          "version": "1.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-extendable/-/is-extendable-1.0.1.tgz",
+          "integrity": "sha1-p0cPnkJnM9gb2B4RVSZOOjUHyrQ=",
+          "dev": true,
+          "requires": {
+            "is-plain-object": "^2.0.4"
+          }
+        }
+      }
+    },
+    "extglob": {
+      "version": "2.0.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extglob/-/extglob-2.0.4.tgz",
+      "integrity": "sha1-rQD+TcYSqSMuhxhxHcXLWrAoVUM=",
+      "dev": true,
+      "requires": {
+        "array-unique": "^0.3.2",
+        "define-property": "^1.0.0",
+        "expand-brackets": "^2.1.4",
+        "extend-shallow": "^2.0.1",
+        "fragment-cache": "^0.2.1",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha1-FpwvbT3x+ZJhgHI2XJsOofaHhlY=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha1-2Eh2Mh0Oet0DmQQGq7u9NrqSaMc=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha1-OxWXRqZmBLBPjIFSS6NlxfFNhuw=",
+          "dev": true,
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        }
+      }
+    },
+    "fill-range": {
+      "version": "4.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/fill-range/-/fill-range-4.0.0.tgz",
+      "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",
+      "dev": true,
+      "requires": {
+        "extend-shallow": "^2.0.1",
+        "is-number": "^3.0.0",
+        "repeat-string": "^1.6.1",
+        "to-regex-range": "^2.1.0"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "find-yarn-workspace-root": {
+      "version": "1.2.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/find-yarn-workspace-root/-/find-yarn-workspace-root-1.2.1.tgz",
+      "integrity": "sha1-QOuObnwlAt36old8F28iFCL4YNs=",
+      "dev": true,
+      "requires": {
+        "fs-extra": "^4.0.3",
+        "micromatch": "^3.1.4"
+      },
+      "dependencies": {
+        "fs-extra": {
+          "version": "4.0.3",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/fs-extra/-/fs-extra-4.0.3.tgz",
+          "integrity": "sha1-DYUhIuW8W+tFP7Ao6cDJvzY0DJQ=",
+          "dev": true,
+          "requires": {
+            "graceful-fs": "^4.1.2",
+            "jsonfile": "^4.0.0",
+            "universalify": "^0.1.0"
+          }
+        }
+      }
+    },
+    "for-in": {
+      "version": "1.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/for-in/-/for-in-1.0.2.tgz",
+      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",
+      "dev": true
+    },
+    "fragment-cache": {
+      "version": "0.2.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/fragment-cache/-/fragment-cache-0.2.1.tgz",
+      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",
+      "dev": true,
+      "requires": {
+        "map-cache": "^0.2.2"
+      }
+    },
+    "fs-extra": {
+      "version": "7.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/fs-extra/-/fs-extra-7.0.1.tgz",
+      "integrity": "sha1-TxicRKoSO4lfcigE9V6iPq3DSOk=",
+      "dev": true,
+      "requires": {
+        "graceful-fs": "^4.1.2",
+        "jsonfile": "^4.0.0",
+        "universalify": "^0.1.0"
+      }
+    },
+    "fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
+      "dev": true
+    },
+    "get-value": {
+      "version": "2.0.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/get-value/-/get-value-2.0.6.tgz",
+      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",
+      "dev": true
+    },
+    "glob": {
+      "version": "7.1.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/glob/-/glob-7.1.6.tgz",
+      "integrity": "sha1-FB8zuBp8JJLhJVlDB0gMRmeSeKY=",
+      "dev": true,
+      "requires": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.0.4",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      }
+    },
+    "graceful-fs": {
+      "version": "4.2.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/graceful-fs/-/graceful-fs-4.2.4.tgz",
+      "integrity": "sha1-Ila94U02MpWMRl68ltxGfKB6Kfs=",
+      "dev": true
+    },
+    "has-flag": {
+      "version": "3.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/has-flag/-/has-flag-3.0.0.tgz",
+      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",
+      "dev": true
+    },
+    "has-value": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/has-value/-/has-value-1.0.0.tgz",
+      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",
+      "dev": true,
+      "requires": {
+        "get-value": "^2.0.6",
+        "has-values": "^1.0.0",
+        "isobject": "^3.0.0"
+      }
+    },
+    "has-values": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/has-values/-/has-values-1.0.0.tgz",
+      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",
+      "dev": true,
+      "requires": {
+        "is-number": "^3.0.0",
+        "kind-of": "^4.0.0"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "4.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-4.0.0.tgz",
+          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "inflight": {
+      "version": "1.0.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
+      "dev": true,
+      "requires": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
+    "inherits": {
+      "version": "2.0.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha1-D6LGT5MpF8NDOg3tVTY6rjdBa3w=",
+      "dev": true
+    },
+    "is-accessor-descriptor": {
+      "version": "0.1.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",
+      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",
+      "dev": true,
+      "requires": {
+        "kind-of": "^3.0.2"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "is-buffer": {
+      "version": "1.1.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-buffer/-/is-buffer-1.1.6.tgz",
+      "integrity": "sha1-76ouqdqg16suoTqXsritUf776L4=",
+      "dev": true
+    },
+    "is-ci": {
+      "version": "2.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-ci/-/is-ci-2.0.0.tgz",
+      "integrity": "sha1-a8YzQYGBDgS1wis9WJ/cpVAmQEw=",
+      "dev": true,
+      "requires": {
+        "ci-info": "^2.0.0"
+      }
+    },
+    "is-data-descriptor": {
+      "version": "0.1.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",
+      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",
+      "dev": true,
+      "requires": {
+        "kind-of": "^3.0.2"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "is-descriptor": {
+      "version": "0.1.6",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-descriptor/-/is-descriptor-0.1.6.tgz",
+      "integrity": "sha1-Nm2CQN3kh8pRgjsaufB6EKeCUco=",
+      "dev": true,
+      "requires": {
+        "is-accessor-descriptor": "^0.1.6",
+        "is-data-descriptor": "^0.1.4",
+        "kind-of": "^5.0.0"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "5.1.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-5.1.0.tgz",
+          "integrity": "sha1-cpyR4thXt6QZofmqZWhcTDP1hF0=",
+          "dev": true
+        }
+      }
+    },
+    "is-extendable": {
+      "version": "0.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-extendable/-/is-extendable-0.1.1.tgz",
+      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=",
+      "dev": true
+    },
+    "is-number": {
+      "version": "3.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-number/-/is-number-3.0.0.tgz",
+      "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",
+      "dev": true,
+      "requires": {
+        "kind-of": "^3.0.2"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "is-plain-object": {
+      "version": "2.0.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-plain-object/-/is-plain-object-2.0.4.tgz",
+      "integrity": "sha1-LBY7P6+xtgbZ0Xko8FwqHDjgdnc=",
+      "dev": true,
+      "requires": {
+        "isobject": "^3.0.1"
+      }
+    },
+    "is-windows": {
+      "version": "1.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-windows/-/is-windows-1.0.2.tgz",
+      "integrity": "sha1-0YUOuXkezRjmGCzhKjDzlmNLsZ0=",
+      "dev": true
+    },
+    "isarray": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
+      "dev": true
+    },
+    "isexe": {
+      "version": "2.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=",
+      "dev": true
+    },
+    "isobject": {
+      "version": "3.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/isobject/-/isobject-3.0.1.tgz",
+      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",
+      "dev": true
+    },
+    "jsonfile": {
+      "version": "4.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/jsonfile/-/jsonfile-4.0.0.tgz",
+      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",
+      "dev": true,
+      "requires": {
+        "graceful-fs": "^4.1.6"
+      }
+    },
+    "kind-of": {
+      "version": "6.0.3",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-6.0.3.tgz",
+      "integrity": "sha1-B8BQNKbDSfoG4k+jWqdttFgM5N0=",
+      "dev": true
+    },
+    "klaw-sync": {
+      "version": "6.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/klaw-sync/-/klaw-sync-6.0.0.tgz",
+      "integrity": "sha1-H9LP1W67YlAYERTwpYEWcJnCsow=",
+      "dev": true,
+      "requires": {
+        "graceful-fs": "^4.1.11"
+      }
+    },
+    "map-cache": {
+      "version": "0.2.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/map-cache/-/map-cache-0.2.2.tgz",
+      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",
+      "dev": true
+    },
+    "map-visit": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/map-visit/-/map-visit-1.0.0.tgz",
+      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",
+      "dev": true,
+      "requires": {
+        "object-visit": "^1.0.0"
+      }
+    },
+    "micromatch": {
+      "version": "3.1.10",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/micromatch/-/micromatch-3.1.10.tgz",
+      "integrity": "sha1-cIWbyVyYQJUvNZoGij/En57PrCM=",
+      "dev": true,
+      "requires": {
+        "arr-diff": "^4.0.0",
+        "array-unique": "^0.3.2",
+        "braces": "^2.3.1",
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "extglob": "^2.0.4",
+        "fragment-cache": "^0.2.1",
+        "kind-of": "^6.0.2",
+        "nanomatch": "^1.2.9",
+        "object.pick": "^1.3.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.2"
+      }
+    },
+    "minimatch": {
+      "version": "3.0.4",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/minimatch/-/minimatch-3.0.4.tgz",
+      "integrity": "sha1-UWbihkV/AzBgZL5Ul+jbsMPTIIM=",
+      "dev": true,
+      "requires": {
+        "brace-expansion": "^1.1.7"
+      }
+    },
+    "minimist": {
+      "version": "1.2.5",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/minimist/-/minimist-1.2.5.tgz",
+      "integrity": "sha1-Z9ZgFLZqaoqqDAg8X9WN9OTpdgI=",
+      "dev": true
+    },
+    "mixin-deep": {
+      "version": "1.3.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/mixin-deep/-/mixin-deep-1.3.2.tgz",
+      "integrity": "sha1-ESC0PcNZp4Xc5ltVuC4lfM9HlWY=",
+      "dev": true,
+      "requires": {
+        "for-in": "^1.0.2",
+        "is-extendable": "^1.0.1"
+      },
+      "dependencies": {
+        "is-extendable": {
+          "version": "1.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-extendable/-/is-extendable-1.0.1.tgz",
+          "integrity": "sha1-p0cPnkJnM9gb2B4RVSZOOjUHyrQ=",
+          "dev": true,
+          "requires": {
+            "is-plain-object": "^2.0.4"
+          }
+        }
+      }
+    },
+    "ms": {
+      "version": "2.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/ms/-/ms-2.0.0.tgz",
+      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
+      "dev": true
+    },
+    "nanomatch": {
+      "version": "1.2.13",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/nanomatch/-/nanomatch-1.2.13.tgz",
+      "integrity": "sha1-uHqKpPwN6P5r6IiVs4mD/yZb0Rk=",
+      "dev": true,
+      "requires": {
+        "arr-diff": "^4.0.0",
+        "array-unique": "^0.3.2",
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "fragment-cache": "^0.2.1",
+        "is-windows": "^1.0.2",
+        "kind-of": "^6.0.2",
+        "object.pick": "^1.3.0",
+        "regex-not": "^1.0.0",
+        "snapdragon": "^0.8.1",
+        "to-regex": "^3.0.1"
+      }
+    },
+    "nice-try": {
+      "version": "1.0.5",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/nice-try/-/nice-try-1.0.5.tgz",
+      "integrity": "sha1-ozeKdpbOfSI+iPybdkvX7xCJ42Y=",
+      "dev": true
+    },
+    "object-copy": {
+      "version": "0.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/object-copy/-/object-copy-0.1.0.tgz",
+      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",
+      "dev": true,
+      "requires": {
+        "copy-descriptor": "^0.1.0",
+        "define-property": "^0.2.5",
+        "kind-of": "^3.0.3"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        },
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "object-visit": {
+      "version": "1.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/object-visit/-/object-visit-1.0.1.tgz",
+      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",
+      "dev": true,
+      "requires": {
+        "isobject": "^3.0.0"
+      }
+    },
+    "object.pick": {
+      "version": "1.3.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/object.pick/-/object.pick-1.3.0.tgz",
+      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",
+      "dev": true,
+      "requires": {
+        "isobject": "^3.0.1"
+      }
+    },
+    "once": {
+      "version": "1.4.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/once/-/once-1.4.0.tgz",
+      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
+      "dev": true,
+      "requires": {
+        "wrappy": "1"
+      }
+    },
+    "os-tmpdir": {
+      "version": "1.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
+      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
+      "dev": true
+    },
+    "pascalcase": {
+      "version": "0.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/pascalcase/-/pascalcase-0.1.1.tgz",
+      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=",
+      "dev": true
+    },
+    "patch-package": {
+      "version": "6.2.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/patch-package/-/patch-package-6.2.2.tgz",
+      "integrity": "sha1-cdFw1lDGXCZVbw0Pu7SNkrbMXzk=",
+      "dev": true,
+      "requires": {
+        "@yarnpkg/lockfile": "^1.1.0",
+        "chalk": "^2.4.2",
+        "cross-spawn": "^6.0.5",
+        "find-yarn-workspace-root": "^1.2.1",
+        "fs-extra": "^7.0.1",
+        "is-ci": "^2.0.0",
+        "klaw-sync": "^6.0.0",
+        "minimist": "^1.2.0",
+        "rimraf": "^2.6.3",
+        "semver": "^5.6.0",
+        "slash": "^2.0.0",
+        "tmp": "^0.0.33"
+      }
+    },
+    "path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
+      "dev": true
+    },
+    "path-key": {
+      "version": "2.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/path-key/-/path-key-2.0.1.tgz",
+      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",
+      "dev": true
+    },
+    "posix-character-classes": {
+      "version": "0.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
+      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=",
+      "dev": true
+    },
+    "regex-not": {
+      "version": "1.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/regex-not/-/regex-not-1.0.2.tgz",
+      "integrity": "sha1-H07OJ+ALC2XgJHpoEOaoXYOldSw=",
+      "dev": true,
+      "requires": {
+        "extend-shallow": "^3.0.2",
+        "safe-regex": "^1.1.0"
+      }
+    },
+    "repeat-element": {
+      "version": "1.1.3",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/repeat-element/-/repeat-element-1.1.3.tgz",
+      "integrity": "sha1-eC4NglwMWjuzlzH4Tv7mt0Lmsc4=",
+      "dev": true
+    },
+    "repeat-string": {
+      "version": "1.6.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/repeat-string/-/repeat-string-1.6.1.tgz",
+      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc=",
+      "dev": true
+    },
+    "resolve-url": {
+      "version": "0.2.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/resolve-url/-/resolve-url-0.2.1.tgz",
+      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=",
+      "dev": true
+    },
+    "ret": {
+      "version": "0.1.15",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/ret/-/ret-0.1.15.tgz",
+      "integrity": "sha1-uKSCXVvbH8P29Twrwz+BOIaBx7w=",
+      "dev": true
+    },
+    "rimraf": {
+      "version": "2.7.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/rimraf/-/rimraf-2.7.1.tgz",
+      "integrity": "sha1-NXl/E6f9rcVmFCwp1PB8ytSD4+w=",
+      "dev": true,
+      "requires": {
+        "glob": "^7.1.3"
+      }
+    },
+    "safe-regex": {
+      "version": "1.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/safe-regex/-/safe-regex-1.1.0.tgz",
+      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",
+      "dev": true,
+      "requires": {
+        "ret": "~0.1.10"
+      }
+    },
+    "semver": {
+      "version": "5.7.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/semver/-/semver-5.7.1.tgz",
+      "integrity": "sha1-qVT5Ma66UI0we78Gnv8MAclhFvc=",
+      "dev": true
+    },
+    "set-value": {
+      "version": "2.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/set-value/-/set-value-2.0.1.tgz",
+      "integrity": "sha1-oY1AUw5vB95CKMfe/kInr4ytAFs=",
+      "dev": true,
+      "requires": {
+        "extend-shallow": "^2.0.1",
+        "is-extendable": "^0.1.1",
+        "is-plain-object": "^2.0.3",
+        "split-string": "^3.0.1"
+      },
+      "dependencies": {
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "shebang-command": {
+      "version": "1.2.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/shebang-command/-/shebang-command-1.2.0.tgz",
+      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",
+      "dev": true,
+      "requires": {
+        "shebang-regex": "^1.0.0"
+      }
+    },
+    "shebang-regex": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/shebang-regex/-/shebang-regex-1.0.0.tgz",
+      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM=",
+      "dev": true
+    },
+    "slash": {
+      "version": "2.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/slash/-/slash-2.0.0.tgz",
+      "integrity": "sha1-3lUoUaF1nfOo8gZTVEL17E3eq0Q=",
+      "dev": true
+    },
+    "snapdragon": {
+      "version": "0.8.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/snapdragon/-/snapdragon-0.8.2.tgz",
+      "integrity": "sha1-ZJIufFZbDhQgS6GqfWlkJ40lGC0=",
+      "dev": true,
+      "requires": {
+        "base": "^0.11.1",
+        "debug": "^2.2.0",
+        "define-property": "^0.2.5",
+        "extend-shallow": "^2.0.1",
+        "map-cache": "^0.2.2",
+        "source-map": "^0.5.6",
+        "source-map-resolve": "^0.5.0",
+        "use": "^3.1.0"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        },
+        "extend-shallow": {
+          "version": "2.0.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/extend-shallow/-/extend-shallow-2.0.1.tgz",
+          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",
+          "dev": true,
+          "requires": {
+            "is-extendable": "^0.1.0"
+          }
+        }
+      }
+    },
+    "snapdragon-node": {
+      "version": "2.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
+      "integrity": "sha1-bBdfhv8UvbByRWPo88GwIaKGhTs=",
+      "dev": true,
+      "requires": {
+        "define-property": "^1.0.0",
+        "isobject": "^3.0.0",
+        "snapdragon-util": "^3.0.1"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-1.0.0.tgz",
+          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^1.0.0"
+          }
+        },
+        "is-accessor-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",
+          "integrity": "sha1-FpwvbT3x+ZJhgHI2XJsOofaHhlY=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-data-descriptor": {
+          "version": "1.0.0",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",
+          "integrity": "sha1-2Eh2Mh0Oet0DmQQGq7u9NrqSaMc=",
+          "dev": true,
+          "requires": {
+            "kind-of": "^6.0.0"
+          }
+        },
+        "is-descriptor": {
+          "version": "1.0.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/is-descriptor/-/is-descriptor-1.0.2.tgz",
+          "integrity": "sha1-OxWXRqZmBLBPjIFSS6NlxfFNhuw=",
+          "dev": true,
+          "requires": {
+            "is-accessor-descriptor": "^1.0.0",
+            "is-data-descriptor": "^1.0.0",
+            "kind-of": "^6.0.2"
+          }
+        }
+      }
+    },
+    "snapdragon-util": {
+      "version": "3.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
+      "integrity": "sha1-+VZHlIbyrNeXAGk/b3uAXkWrVuI=",
+      "dev": true,
+      "requires": {
+        "kind-of": "^3.2.0"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "source-map": {
+      "version": "0.5.7",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/source-map/-/source-map-0.5.7.tgz",
+      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",
+      "dev": true
+    },
+    "source-map-resolve": {
+      "version": "0.5.3",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
+      "integrity": "sha1-GQhmvs51U+H48mei7oLGBrVQmho=",
+      "dev": true,
+      "requires": {
+        "atob": "^2.1.2",
+        "decode-uri-component": "^0.2.0",
+        "resolve-url": "^0.2.1",
+        "source-map-url": "^0.4.0",
+        "urix": "^0.1.0"
+      }
+    },
+    "source-map-url": {
+      "version": "0.4.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/source-map-url/-/source-map-url-0.4.0.tgz",
+      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
+      "dev": true
+    },
+    "split-string": {
+      "version": "3.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/split-string/-/split-string-3.1.0.tgz",
+      "integrity": "sha1-fLCd2jqGWFcFxks5pkZgOGguj+I=",
+      "dev": true,
+      "requires": {
+        "extend-shallow": "^3.0.0"
+      }
+    },
+    "static-extend": {
+      "version": "0.1.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/static-extend/-/static-extend-0.1.2.tgz",
+      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",
+      "dev": true,
+      "requires": {
+        "define-property": "^0.2.5",
+        "object-copy": "^0.1.0"
+      },
+      "dependencies": {
+        "define-property": {
+          "version": "0.2.5",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/define-property/-/define-property-0.2.5.tgz",
+          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",
+          "dev": true,
+          "requires": {
+            "is-descriptor": "^0.1.0"
+          }
+        }
+      }
+    },
+    "supports-color": {
+      "version": "5.5.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/supports-color/-/supports-color-5.5.0.tgz",
+      "integrity": "sha1-4uaaRKyHcveKHsCzW2id9lMO/I8=",
+      "dev": true,
+      "requires": {
+        "has-flag": "^3.0.0"
+      }
+    },
+    "tmp": {
+      "version": "0.0.33",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/tmp/-/tmp-0.0.33.tgz",
+      "integrity": "sha1-bTQzWIl2jSGyvNoKonfO07G/rfk=",
+      "dev": true,
+      "requires": {
+        "os-tmpdir": "~1.0.2"
+      }
+    },
+    "to-object-path": {
+      "version": "0.3.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/to-object-path/-/to-object-path-0.3.0.tgz",
+      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",
+      "dev": true,
+      "requires": {
+        "kind-of": "^3.0.2"
+      },
+      "dependencies": {
+        "kind-of": {
+          "version": "3.2.2",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/kind-of/-/kind-of-3.2.2.tgz",
+          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",
+          "dev": true,
+          "requires": {
+            "is-buffer": "^1.1.5"
+          }
+        }
+      }
+    },
+    "to-regex": {
+      "version": "3.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/to-regex/-/to-regex-3.0.2.tgz",
+      "integrity": "sha1-E8/dmzNlUvMLUfM6iuG0Knp1mc4=",
+      "dev": true,
+      "requires": {
+        "define-property": "^2.0.2",
+        "extend-shallow": "^3.0.2",
+        "regex-not": "^1.0.2",
+        "safe-regex": "^1.1.0"
+      }
+    },
+    "to-regex-range": {
+      "version": "2.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/to-regex-range/-/to-regex-range-2.1.1.tgz",
+      "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",
+      "dev": true,
+      "requires": {
+        "is-number": "^3.0.0",
+        "repeat-string": "^1.6.1"
+      }
+    },
+    "union-value": {
+      "version": "1.0.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/union-value/-/union-value-1.0.1.tgz",
+      "integrity": "sha1-C2/nuDWuzaYcbqTU8CwUIh4QmEc=",
+      "dev": true,
+      "requires": {
+        "arr-union": "^3.1.0",
+        "get-value": "^2.0.6",
+        "is-extendable": "^0.1.1",
+        "set-value": "^2.0.1"
+      }
+    },
+    "universalify": {
+      "version": "0.1.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/universalify/-/universalify-0.1.2.tgz",
+      "integrity": "sha1-tkb2m+OULavOzJ1mOcgNwQXvqmY=",
+      "dev": true
+    },
+    "unset-value": {
+      "version": "1.0.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/unset-value/-/unset-value-1.0.0.tgz",
+      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",
+      "dev": true,
+      "requires": {
+        "has-value": "^0.3.1",
+        "isobject": "^3.0.0"
+      },
+      "dependencies": {
+        "has-value": {
+          "version": "0.3.1",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/has-value/-/has-value-0.3.1.tgz",
+          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",
+          "dev": true,
+          "requires": {
+            "get-value": "^2.0.3",
+            "has-values": "^0.1.4",
+            "isobject": "^2.0.0"
+          },
+          "dependencies": {
+            "isobject": {
+              "version": "2.1.0",
+              "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/isobject/-/isobject-2.1.0.tgz",
+              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",
+              "dev": true,
+              "requires": {
+                "isarray": "1.0.0"
+              }
+            }
+          }
+        },
+        "has-values": {
+          "version": "0.1.4",
+          "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/has-values/-/has-values-0.1.4.tgz",
+          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E=",
+          "dev": true
+        }
+      }
+    },
+    "urix": {
+      "version": "0.1.0",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/urix/-/urix-0.1.0.tgz",
+      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
+      "dev": true
+    },
+    "use": {
+      "version": "3.1.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/use/-/use-3.1.1.tgz",
+      "integrity": "sha1-1QyMrHmhn7wg8pEfVuuXP04QBw8=",
+      "dev": true
+    },
+    "which": {
+      "version": "1.3.1",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/which/-/which-1.3.1.tgz",
+      "integrity": "sha1-pFBD1U9YBTFtqNYvn1CRjT2nCwo=",
+      "dev": true,
+      "requires": {
+        "isexe": "^2.0.0"
+      }
+    },
+    "wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://artifacts.ua-ecm.com:443/artifactory/api/npm/ua-npm-master/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
+      "dev": true
+    }
+  }
+}
